(function(T,O){typeof exports=="object"&&typeof module<"u"?module.exports=O():typeof define=="function"&&define.amd?define(O):(T=typeof globalThis<"u"?globalThis:T||self,T.EhWebglMetaballs=O())})(this,function(){"use strict";function T(t){let e=t[0],i=t[1],s=t[2];return Math.sqrt(e*e+i*i+s*s)}function O(t,e){return t[0]=e[0],t[1]=e[1],t[2]=e[2],t}function ge(t,e,i,s){return t[0]=e,t[1]=i,t[2]=s,t}function G(t,e,i){return t[0]=e[0]+i[0],t[1]=e[1]+i[1],t[2]=e[2]+i[2],t}function q(t,e,i){return t[0]=e[0]-i[0],t[1]=e[1]-i[1],t[2]=e[2]-i[2],t}function ve(t,e,i){return t[0]=e[0]*i[0],t[1]=e[1]*i[1],t[2]=e[2]*i[2],t}function _e(t,e,i){return t[0]=e[0]/i[0],t[1]=e[1]/i[1],t[2]=e[2]/i[2],t}function N(t,e,i){return t[0]=e[0]*i,t[1]=e[1]*i,t[2]=e[2]*i,t}function ye(t,e){let i=e[0]-t[0],s=e[1]-t[1],n=e[2]-t[2];return Math.sqrt(i*i+s*s+n*n)}function be(t,e){let i=e[0]-t[0],s=e[1]-t[1],n=e[2]-t[2];return i*i+s*s+n*n}function Z(t){let e=t[0],i=t[1],s=t[2];return e*e+i*i+s*s}function xe(t,e){return t[0]=-e[0],t[1]=-e[1],t[2]=-e[2],t}function Me(t,e){return t[0]=1/e[0],t[1]=1/e[1],t[2]=1/e[2],t}function U(t,e){let i=e[0],s=e[1],n=e[2],r=i*i+s*s+n*n;return r>0&&(r=1/Math.sqrt(r)),t[0]=e[0]*r,t[1]=e[1]*r,t[2]=e[2]*r,t}function H(t,e){return t[0]*e[0]+t[1]*e[1]+t[2]*e[2]}function Y(t,e,i){let s=e[0],n=e[1],r=e[2],a=i[0],o=i[1],l=i[2];return t[0]=n*l-r*o,t[1]=r*a-s*l,t[2]=s*o-n*a,t}function we(t,e,i,s){let n=e[0],r=e[1],a=e[2];return t[0]=n+s*(i[0]-n),t[1]=r+s*(i[1]-r),t[2]=a+s*(i[2]-a),t}function Se(t,e,i){let s=e[0],n=e[1],r=e[2],a=i[3]*s+i[7]*n+i[11]*r+i[15];return a=a||1,t[0]=(i[0]*s+i[4]*n+i[8]*r+i[12])/a,t[1]=(i[1]*s+i[5]*n+i[9]*r+i[13])/a,t[2]=(i[2]*s+i[6]*n+i[10]*r+i[14])/a,t}function Ae(t,e,i){let s=e[0],n=e[1],r=e[2],a=i[3]*s+i[7]*n+i[11]*r+i[15];return a=a||1,t[0]=(i[0]*s+i[4]*n+i[8]*r)/a,t[1]=(i[1]*s+i[5]*n+i[9]*r)/a,t[2]=(i[2]*s+i[6]*n+i[10]*r)/a,t}function Ee(t,e,i){let s=e[0],n=e[1],r=e[2];return t[0]=s*i[0]+n*i[3]+r*i[6],t[1]=s*i[1]+n*i[4]+r*i[7],t[2]=s*i[2]+n*i[5]+r*i[8],t}function Ce(t,e,i){let s=e[0],n=e[1],r=e[2],a=i[0],o=i[1],l=i[2],h=i[3],c=o*r-l*n,u=l*s-a*r,f=a*n-o*s,d=o*f-l*u,p=l*c-a*f,g=a*u-o*c,m=h*2;return c*=m,u*=m,f*=m,d*=2,p*=2,g*=2,t[0]=s+c+d,t[1]=n+u+p,t[2]=r+f+g,t}const ze=function(){const t=[0,0,0],e=[0,0,0];return function(i,s){O(t,i),O(e,s),U(t,t),U(e,e);let n=H(t,e);return n>1?0:n<-1?Math.PI:Math.acos(n)}}();function Fe(t,e){return t[0]===e[0]&&t[1]===e[1]&&t[2]===e[2]}class R extends Array{constructor(e=0,i=e,s=e){return super(e,i,s),this}get x(){return this[0]}get y(){return this[1]}get z(){return this[2]}set x(e){this[0]=e}set y(e){this[1]=e}set z(e){this[2]=e}set(e,i=e,s=e){return e.length?this.copy(e):(ge(this,e,i,s),this)}copy(e){return O(this,e),this}add(e,i){return i?G(this,e,i):G(this,this,e),this}sub(e,i){return i?q(this,e,i):q(this,this,e),this}multiply(e){return e.length?ve(this,this,e):N(this,this,e),this}divide(e){return e.length?_e(this,this,e):N(this,this,1/e),this}inverse(e=this){return Me(this,e),this}len(){return T(this)}distance(e){return e?ye(this,e):T(this)}squaredLen(){return Z(this)}squaredDistance(e){return e?be(this,e):Z(this)}negate(e=this){return xe(this,e),this}cross(e,i){return i?Y(this,e,i):Y(this,this,e),this}scale(e){return N(this,this,e),this}normalize(){return U(this,this),this}dot(e){return H(this,e)}equals(e){return Fe(this,e)}applyMatrix3(e){return Ee(this,this,e),this}applyMatrix4(e){return Se(this,this,e),this}scaleRotateMatrix4(e){return Ae(this,this,e),this}applyQuaternion(e){return Ce(this,this,e),this}angle(e){return ze(this,e)}lerp(e,i){return we(this,this,e,i),this}clone(){return new R(this[0],this[1],this[2])}fromArray(e,i=0){return this[0]=e[i],this[1]=e[i+1],this[2]=e[i+2],this}toArray(e=[],i=0){return e[i]=this[0],e[i+1]=this[1],e[i+2]=this[2],e}transformDirection(e){const i=this[0],s=this[1],n=this[2];return this[0]=e[0]*i+e[4]*s+e[8]*n,this[1]=e[1]*i+e[5]*s+e[9]*n,this[2]=e[2]*i+e[6]*s+e[10]*n,this.normalize()}}const j=new R;let Be=1,Ie=1,Q=!1;class De{constructor(e,i={}){e.canvas||console.error("gl not passed as first argument to Geometry"),this.gl=e,this.attributes=i,this.id=Be++,this.VAOs={},this.drawRange={start:0,count:0},this.instancedCount=0,this.gl.renderer.bindVertexArray(null),this.gl.renderer.currentGeometry=null,this.glState=this.gl.renderer.state;for(let s in i)this.addAttribute(s,i[s])}addAttribute(e,i){if(this.attributes[e]=i,i.id=Ie++,i.size=i.size||1,i.type=i.type||(i.data.constructor===Float32Array?this.gl.FLOAT:i.data.constructor===Uint16Array?this.gl.UNSIGNED_SHORT:this.gl.UNSIGNED_INT),i.target=e==="index"?this.gl.ELEMENT_ARRAY_BUFFER:this.gl.ARRAY_BUFFER,i.normalized=i.normalized||!1,i.stride=i.stride||0,i.offset=i.offset||0,i.count=i.count||(i.stride?i.data.byteLength/i.stride:i.data.length/i.size),i.divisor=i.instanced||0,i.needsUpdate=!1,i.usage=i.usage||this.gl.STATIC_DRAW,i.buffer||this.updateAttribute(i),i.divisor){if(this.isInstanced=!0,this.instancedCount&&this.instancedCount!==i.count*i.divisor)return console.warn("geometry has multiple instanced buffers of different length"),this.instancedCount=Math.min(this.instancedCount,i.count*i.divisor);this.instancedCount=i.count*i.divisor}else e==="index"?this.drawRange.count=i.count:this.attributes.index||(this.drawRange.count=Math.max(this.drawRange.count,i.count))}updateAttribute(e){const i=!e.buffer;i&&(e.buffer=this.gl.createBuffer()),this.glState.boundBuffer!==e.buffer&&(this.gl.bindBuffer(e.target,e.buffer),this.glState.boundBuffer=e.buffer),i?this.gl.bufferData(e.target,e.data,e.usage):this.gl.bufferSubData(e.target,0,e.data),e.needsUpdate=!1}setIndex(e){this.addAttribute("index",e)}setDrawRange(e,i){this.drawRange.start=e,this.drawRange.count=i}setInstancedCount(e){this.instancedCount=e}createVAO(e){this.VAOs[e.attributeOrder]=this.gl.renderer.createVertexArray(),this.gl.renderer.bindVertexArray(this.VAOs[e.attributeOrder]),this.bindAttributes(e)}bindAttributes(e){e.attributeLocations.forEach((i,{name:s,type:n})=>{if(!this.attributes[s]){console.warn(`active attribute ${s} not being supplied`);return}const r=this.attributes[s];this.gl.bindBuffer(r.target,r.buffer),this.glState.boundBuffer=r.buffer;let a=1;n===35674&&(a=2),n===35675&&(a=3),n===35676&&(a=4);const o=r.size/a,l=a===1?0:a*a*4,h=a===1?0:a*4;for(let c=0;c<a;c++)this.gl.vertexAttribPointer(i+c,o,r.type,r.normalized,r.stride+l,r.offset+c*h),this.gl.enableVertexAttribArray(i+c),this.gl.renderer.vertexAttribDivisor(i+c,r.divisor)}),this.attributes.index&&this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,this.attributes.index.buffer)}draw({program:e,mode:i=this.gl.TRIANGLES}){var n;this.gl.renderer.currentGeometry!==`${this.id}_${e.attributeOrder}`&&(this.VAOs[e.attributeOrder]||this.createVAO(e),this.gl.renderer.bindVertexArray(this.VAOs[e.attributeOrder]),this.gl.renderer.currentGeometry=`${this.id}_${e.attributeOrder}`),e.attributeLocations.forEach((r,{name:a})=>{const o=this.attributes[a];o.needsUpdate&&this.updateAttribute(o)});let s=2;((n=this.attributes.index)==null?void 0:n.type)===this.gl.UNSIGNED_INT&&(s=4),this.isInstanced?this.attributes.index?this.gl.renderer.drawElementsInstanced(i,this.drawRange.count,this.attributes.index.type,this.attributes.index.offset+this.drawRange.start*s,this.instancedCount):this.gl.renderer.drawArraysInstanced(i,this.drawRange.start,this.drawRange.count,this.instancedCount):this.attributes.index?this.gl.drawElements(i,this.drawRange.count,this.attributes.index.type,this.attributes.index.offset+this.drawRange.start*s):this.gl.drawArrays(i,this.drawRange.start,this.drawRange.count)}getPosition(){const e=this.attributes.position;if(e.data)return e;if(!Q)return console.warn("No position buffer data found to compute bounds"),Q=!0}computeBoundingBox(e){e||(e=this.getPosition());const i=e.data,s=e.size;this.bounds||(this.bounds={min:new R,max:new R,center:new R,scale:new R,radius:1/0});const n=this.bounds.min,r=this.bounds.max,a=this.bounds.center,o=this.bounds.scale;n.set(1/0),r.set(-1/0);for(let l=0,h=i.length;l<h;l+=s){const c=i[l],u=i[l+1],f=i[l+2];n.x=Math.min(c,n.x),n.y=Math.min(u,n.y),n.z=Math.min(f,n.z),r.x=Math.max(c,r.x),r.y=Math.max(u,r.y),r.z=Math.max(f,r.z)}o.sub(r,n),a.add(n,r).divide(2)}computeBoundingSphere(e){e||(e=this.getPosition());const i=e.data,s=e.size;this.bounds||this.computeBoundingBox(e);let n=0;for(let r=0,a=i.length;r<a;r+=s)j.fromArray(i,r),n=Math.max(n,this.bounds.center.squaredDistance(j));this.bounds.radius=Math.sqrt(n)}remove(){for(let e in this.VAOs)this.gl.renderer.deleteVertexArray(this.VAOs[e]),delete this.VAOs[e];for(let e in this.attributes)this.gl.deleteBuffer(this.attributes[e].buffer),delete this.attributes[e]}}let Re=1;const K={};class Oe{constructor(e,{vertex:i,fragment:s,uniforms:n={},transparent:r=!1,cullFace:a=e.BACK,frontFace:o=e.CCW,depthTest:l=!0,depthWrite:h=!0,depthFunc:c=e.LESS}={}){e.canvas||console.error("gl not passed as first argument to Program"),this.gl=e,this.uniforms=n,this.id=Re++,i||console.warn("vertex shader not supplied"),s||console.warn("fragment shader not supplied"),this.transparent=r,this.cullFace=a,this.frontFace=o,this.depthTest=l,this.depthWrite=h,this.depthFunc=c,this.blendFunc={},this.blendEquation={},this.transparent&&!this.blendFunc.src&&(this.gl.renderer.premultipliedAlpha?this.setBlendFunc(this.gl.ONE,this.gl.ONE_MINUS_SRC_ALPHA):this.setBlendFunc(this.gl.SRC_ALPHA,this.gl.ONE_MINUS_SRC_ALPHA));const u=e.createShader(e.VERTEX_SHADER);e.shaderSource(u,i),e.compileShader(u),e.getShaderInfoLog(u)!==""&&console.warn(`${e.getShaderInfoLog(u)}
Vertex Shader
${J(i)}`);const f=e.createShader(e.FRAGMENT_SHADER);if(e.shaderSource(f,s),e.compileShader(f),e.getShaderInfoLog(f)!==""&&console.warn(`${e.getShaderInfoLog(f)}
Fragment Shader
${J(s)}`),this.program=e.createProgram(),e.attachShader(this.program,u),e.attachShader(this.program,f),e.linkProgram(this.program),!e.getProgramParameter(this.program,e.LINK_STATUS))return console.warn(e.getProgramInfoLog(this.program));e.deleteShader(u),e.deleteShader(f),this.uniformLocations=new Map;let d=e.getProgramParameter(this.program,e.ACTIVE_UNIFORMS);for(let m=0;m<d;m++){let v=e.getActiveUniform(this.program,m);this.uniformLocations.set(v,e.getUniformLocation(this.program,v.name));const w=v.name.match(/(\w+)/g);v.uniformName=w[0],v.nameComponents=w.slice(1)}this.attributeLocations=new Map;const p=[],g=e.getProgramParameter(this.program,e.ACTIVE_ATTRIBUTES);for(let m=0;m<g;m++){const v=e.getActiveAttrib(this.program,m),w=e.getAttribLocation(this.program,v.name);w!==-1&&(p[w]=v.name,this.attributeLocations.set(v,w))}this.attributeOrder=p.join("")}setBlendFunc(e,i,s,n){this.blendFunc.src=e,this.blendFunc.dst=i,this.blendFunc.srcAlpha=s,this.blendFunc.dstAlpha=n,e&&(this.transparent=!0)}setBlendEquation(e,i){this.blendEquation.modeRGB=e,this.blendEquation.modeAlpha=i}applyState(){this.depthTest?this.gl.renderer.enable(this.gl.DEPTH_TEST):this.gl.renderer.disable(this.gl.DEPTH_TEST),this.cullFace?this.gl.renderer.enable(this.gl.CULL_FACE):this.gl.renderer.disable(this.gl.CULL_FACE),this.blendFunc.src?this.gl.renderer.enable(this.gl.BLEND):this.gl.renderer.disable(this.gl.BLEND),this.cullFace&&this.gl.renderer.setCullFace(this.cullFace),this.gl.renderer.setFrontFace(this.frontFace),this.gl.renderer.setDepthMask(this.depthWrite),this.gl.renderer.setDepthFunc(this.depthFunc),this.blendFunc.src&&this.gl.renderer.setBlendFunc(this.blendFunc.src,this.blendFunc.dst,this.blendFunc.srcAlpha,this.blendFunc.dstAlpha),this.gl.renderer.setBlendEquation(this.blendEquation.modeRGB,this.blendEquation.modeAlpha)}use({flipFaces:e=!1}={}){let i=-1;this.gl.renderer.state.currentProgram===this.id||(this.gl.useProgram(this.program),this.gl.renderer.state.currentProgram=this.id),this.uniformLocations.forEach((n,r)=>{let a=this.uniforms[r.uniformName];for(const o of r.nameComponents){if(!a)break;if(o in a)a=a[o];else{if(Array.isArray(a.value))break;a=void 0;break}}if(!a)return ee(`Active uniform ${r.name} has not been supplied`);if(a&&a.value===void 0)return ee(`${r.name} uniform is missing a value parameter`);if(a.value.texture)return i=i+1,a.value.update(i),V(this.gl,r.type,n,i);if(a.value.length&&a.value[0].texture){const o=[];return a.value.forEach(l=>{i=i+1,l.update(i),o.push(i)}),V(this.gl,r.type,n,o)}V(this.gl,r.type,n,a.value)}),this.applyState(),e&&this.gl.renderer.setFrontFace(this.frontFace===this.gl.CCW?this.gl.CW:this.gl.CCW)}remove(){this.gl.deleteProgram(this.program)}}function V(t,e,i,s){s=s.length?Te(s):s;const n=t.renderer.state.uniformLocations.get(i);if(s.length)if(n===void 0||n.length!==s.length)t.renderer.state.uniformLocations.set(i,s.slice(0));else{if(ke(n,s))return;n.set?n.set(s):Le(n,s),t.renderer.state.uniformLocations.set(i,n)}else{if(n===s)return;t.renderer.state.uniformLocations.set(i,s)}switch(e){case 5126:return s.length?t.uniform1fv(i,s):t.uniform1f(i,s);case 35664:return t.uniform2fv(i,s);case 35665:return t.uniform3fv(i,s);case 35666:return t.uniform4fv(i,s);case 35670:case 5124:case 35678:case 35680:return s.length?t.uniform1iv(i,s):t.uniform1i(i,s);case 35671:case 35667:return t.uniform2iv(i,s);case 35672:case 35668:return t.uniform3iv(i,s);case 35673:case 35669:return t.uniform4iv(i,s);case 35674:return t.uniformMatrix2fv(i,!1,s);case 35675:return t.uniformMatrix3fv(i,!1,s);case 35676:return t.uniformMatrix4fv(i,!1,s)}}function J(t){let e=t.split(`
`);for(let i=0;i<e.length;i++)e[i]=i+1+": "+e[i];return e.join(`
`)}function Te(t){const e=t.length,i=t[0].length;if(i===void 0)return t;const s=e*i;let n=K[s];n||(K[s]=n=new Float32Array(s));for(let r=0;r<e;r++)n.set(t[r],r*i);return n}function ke(t,e){if(t.length!==e.length)return!1;for(let i=0,s=t.length;i<s;i++)if(t[i]!==e[i])return!1;return!0}function Le(t,e){for(let i=0,s=t.length;i<s;i++)t[i]=e[i]}let W=0;function ee(t){W>100||(console.warn(t),W++,W>100&&console.warn("More than 100 program warnings - stopping logs."))}const $=new R;let Pe=1;class Ne{constructor({canvas:e=document.createElement("canvas"),width:i=300,height:s=150,dpr:n=1,alpha:r=!1,depth:a=!0,stencil:o=!1,antialias:l=!1,premultipliedAlpha:h=!1,preserveDrawingBuffer:c=!1,powerPreference:u="default",autoClear:f=!0,webgl:d=2}={}){const p={alpha:r,depth:a,stencil:o,antialias:l,premultipliedAlpha:h,preserveDrawingBuffer:c,powerPreference:u};this.dpr=n,this.alpha=r,this.color=!0,this.depth=a,this.stencil=o,this.premultipliedAlpha=h,this.autoClear=f,this.id=Pe++,d===2&&(this.gl=e.getContext("webgl2",p)),this.isWebgl2=!!this.gl,this.gl||(this.gl=e.getContext("webgl",p)),this.gl||console.error("unable to create webgl context"),this.gl.renderer=this,this.setSize(i,s),this.state={},this.state.blendFunc={src:this.gl.ONE,dst:this.gl.ZERO},this.state.blendEquation={modeRGB:this.gl.FUNC_ADD},this.state.cullFace=!1,this.state.frontFace=this.gl.CCW,this.state.depthMask=!0,this.state.depthFunc=this.gl.LESS,this.state.premultiplyAlpha=!1,this.state.flipY=!1,this.state.unpackAlignment=4,this.state.framebuffer=null,this.state.viewport={x:0,y:0,width:null,height:null},this.state.textureUnits=[],this.state.activeTextureUnit=0,this.state.boundBuffer=null,this.state.uniformLocations=new Map,this.state.currentProgram=null,this.extensions={},this.isWebgl2?(this.getExtension("EXT_color_buffer_float"),this.getExtension("OES_texture_float_linear")):(this.getExtension("OES_texture_float"),this.getExtension("OES_texture_float_linear"),this.getExtension("OES_texture_half_float"),this.getExtension("OES_texture_half_float_linear"),this.getExtension("OES_element_index_uint"),this.getExtension("OES_standard_derivatives"),this.getExtension("EXT_sRGB"),this.getExtension("WEBGL_depth_texture"),this.getExtension("WEBGL_draw_buffers")),this.getExtension("WEBGL_compressed_texture_astc"),this.getExtension("EXT_texture_compression_bptc"),this.getExtension("WEBGL_compressed_texture_s3tc"),this.getExtension("WEBGL_compressed_texture_etc1"),this.getExtension("WEBGL_compressed_texture_pvrtc"),this.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc"),this.vertexAttribDivisor=this.getExtension("ANGLE_instanced_arrays","vertexAttribDivisor","vertexAttribDivisorANGLE"),this.drawArraysInstanced=this.getExtension("ANGLE_instanced_arrays","drawArraysInstanced","drawArraysInstancedANGLE"),this.drawElementsInstanced=this.getExtension("ANGLE_instanced_arrays","drawElementsInstanced","drawElementsInstancedANGLE"),this.createVertexArray=this.getExtension("OES_vertex_array_object","createVertexArray","createVertexArrayOES"),this.bindVertexArray=this.getExtension("OES_vertex_array_object","bindVertexArray","bindVertexArrayOES"),this.deleteVertexArray=this.getExtension("OES_vertex_array_object","deleteVertexArray","deleteVertexArrayOES"),this.drawBuffers=this.getExtension("WEBGL_draw_buffers","drawBuffers","drawBuffersWEBGL"),this.parameters={},this.parameters.maxTextureUnits=this.gl.getParameter(this.gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS),this.parameters.maxAnisotropy=this.getExtension("EXT_texture_filter_anisotropic")?this.gl.getParameter(this.getExtension("EXT_texture_filter_anisotropic").MAX_TEXTURE_MAX_ANISOTROPY_EXT):0}setSize(e,i){this.width=e,this.height=i,this.gl.canvas.width=e*this.dpr,this.gl.canvas.height=i*this.dpr,this.gl.canvas.style&&Object.assign(this.gl.canvas.style,{width:e+"px",height:i+"px"})}setViewport(e,i,s=0,n=0){this.state.viewport.width===e&&this.state.viewport.height===i||(this.state.viewport.width=e,this.state.viewport.height=i,this.state.viewport.x=s,this.state.viewport.y=n,this.gl.viewport(s,n,e,i))}setScissor(e,i,s=0,n=0){this.gl.scissor(s,n,e,i)}enable(e){this.state[e]!==!0&&(this.gl.enable(e),this.state[e]=!0)}disable(e){this.state[e]!==!1&&(this.gl.disable(e),this.state[e]=!1)}setBlendFunc(e,i,s,n){this.state.blendFunc.src===e&&this.state.blendFunc.dst===i&&this.state.blendFunc.srcAlpha===s&&this.state.blendFunc.dstAlpha===n||(this.state.blendFunc.src=e,this.state.blendFunc.dst=i,this.state.blendFunc.srcAlpha=s,this.state.blendFunc.dstAlpha=n,s!==void 0?this.gl.blendFuncSeparate(e,i,s,n):this.gl.blendFunc(e,i))}setBlendEquation(e,i){e=e||this.gl.FUNC_ADD,!(this.state.blendEquation.modeRGB===e&&this.state.blendEquation.modeAlpha===i)&&(this.state.blendEquation.modeRGB=e,this.state.blendEquation.modeAlpha=i,i!==void 0?this.gl.blendEquationSeparate(e,i):this.gl.blendEquation(e))}setCullFace(e){this.state.cullFace!==e&&(this.state.cullFace=e,this.gl.cullFace(e))}setFrontFace(e){this.state.frontFace!==e&&(this.state.frontFace=e,this.gl.frontFace(e))}setDepthMask(e){this.state.depthMask!==e&&(this.state.depthMask=e,this.gl.depthMask(e))}setDepthFunc(e){this.state.depthFunc!==e&&(this.state.depthFunc=e,this.gl.depthFunc(e))}activeTexture(e){this.state.activeTextureUnit!==e&&(this.state.activeTextureUnit=e,this.gl.activeTexture(this.gl.TEXTURE0+e))}bindFramebuffer({target:e=this.gl.FRAMEBUFFER,buffer:i=null}={}){this.state.framebuffer!==i&&(this.state.framebuffer=i,this.gl.bindFramebuffer(e,i))}getExtension(e,i,s){return i&&this.gl[i]?this.gl[i].bind(this.gl):(this.extensions[e]||(this.extensions[e]=this.gl.getExtension(e)),i?this.extensions[e]?this.extensions[e][s].bind(this.extensions[e]):null:this.extensions[e])}sortOpaque(e,i){return e.renderOrder!==i.renderOrder?e.renderOrder-i.renderOrder:e.program.id!==i.program.id?e.program.id-i.program.id:e.zDepth!==i.zDepth?e.zDepth-i.zDepth:i.id-e.id}sortTransparent(e,i){return e.renderOrder!==i.renderOrder?e.renderOrder-i.renderOrder:e.zDepth!==i.zDepth?i.zDepth-e.zDepth:i.id-e.id}sortUI(e,i){return e.renderOrder!==i.renderOrder?e.renderOrder-i.renderOrder:e.program.id!==i.program.id?e.program.id-i.program.id:i.id-e.id}getRenderList({scene:e,camera:i,frustumCull:s,sort:n}){let r=[];if(i&&s&&i.updateFrustum(),e.traverse(a=>{if(!a.visible)return!0;a.draw&&(s&&a.frustumCulled&&i&&!i.frustumIntersectsMesh(a)||r.push(a))}),n){const a=[],o=[],l=[];r.forEach(h=>{h.program.transparent?h.program.depthTest?o.push(h):l.push(h):a.push(h),h.zDepth=0,!(h.renderOrder!==0||!h.program.depthTest||!i)&&(h.worldMatrix.getTranslation($),$.applyMatrix4(i.projectionViewMatrix),h.zDepth=$.z)}),a.sort(this.sortOpaque),o.sort(this.sortTransparent),l.sort(this.sortUI),r=a.concat(o,l)}return r}render({scene:e,camera:i,target:s=null,update:n=!0,sort:r=!0,frustumCull:a=!0,clear:o}){s===null?(this.bindFramebuffer(),this.setViewport(this.width*this.dpr,this.height*this.dpr)):(this.bindFramebuffer(s),this.setViewport(s.width,s.height)),(o||this.autoClear&&o!==!1)&&(this.depth&&(!s||s.depth)&&(this.enable(this.gl.DEPTH_TEST),this.setDepthMask(!0)),this.gl.clear((this.color?this.gl.COLOR_BUFFER_BIT:0)|(this.depth?this.gl.DEPTH_BUFFER_BIT:0)|(this.stencil?this.gl.STENCIL_BUFFER_BIT:0))),n&&e.updateMatrixWorld(),i&&i.updateMatrixWorld(),this.getRenderList({scene:e,camera:i,frustumCull:a,sort:r}).forEach(h=>{h.draw({camera:i})})}}function Ue(t,e){return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t}function Ve(t,e,i,s,n){return t[0]=e,t[1]=i,t[2]=s,t[3]=n,t}function We(t,e){let i=e[0],s=e[1],n=e[2],r=e[3],a=i*i+s*s+n*n+r*r;return a>0&&(a=1/Math.sqrt(a)),t[0]=i*a,t[1]=s*a,t[2]=n*a,t[3]=r*a,t}function $e(t,e){return t[0]*e[0]+t[1]*e[1]+t[2]*e[2]+t[3]*e[3]}function Xe(t){return t[0]=0,t[1]=0,t[2]=0,t[3]=1,t}function Ge(t,e,i){i=i*.5;let s=Math.sin(i);return t[0]=s*e[0],t[1]=s*e[1],t[2]=s*e[2],t[3]=Math.cos(i),t}function te(t,e,i){let s=e[0],n=e[1],r=e[2],a=e[3],o=i[0],l=i[1],h=i[2],c=i[3];return t[0]=s*c+a*o+n*h-r*l,t[1]=n*c+a*l+r*o-s*h,t[2]=r*c+a*h+s*l-n*o,t[3]=a*c-s*o-n*l-r*h,t}function qe(t,e,i){i*=.5;let s=e[0],n=e[1],r=e[2],a=e[3],o=Math.sin(i),l=Math.cos(i);return t[0]=s*l+a*o,t[1]=n*l+r*o,t[2]=r*l-n*o,t[3]=a*l-s*o,t}function Ze(t,e,i){i*=.5;let s=e[0],n=e[1],r=e[2],a=e[3],o=Math.sin(i),l=Math.cos(i);return t[0]=s*l-r*o,t[1]=n*l+a*o,t[2]=r*l+s*o,t[3]=a*l-n*o,t}function He(t,e,i){i*=.5;let s=e[0],n=e[1],r=e[2],a=e[3],o=Math.sin(i),l=Math.cos(i);return t[0]=s*l+n*o,t[1]=n*l-s*o,t[2]=r*l+a*o,t[3]=a*l-r*o,t}function Ye(t,e,i,s){let n=e[0],r=e[1],a=e[2],o=e[3],l=i[0],h=i[1],c=i[2],u=i[3],f,d,p,g,m;return d=n*l+r*h+a*c+o*u,d<0&&(d=-d,l=-l,h=-h,c=-c,u=-u),1-d>1e-6?(f=Math.acos(d),p=Math.sin(f),g=Math.sin((1-s)*f)/p,m=Math.sin(s*f)/p):(g=1-s,m=s),t[0]=g*n+m*l,t[1]=g*r+m*h,t[2]=g*a+m*c,t[3]=g*o+m*u,t}function je(t,e){let i=e[0],s=e[1],n=e[2],r=e[3],a=i*i+s*s+n*n+r*r,o=a?1/a:0;return t[0]=-i*o,t[1]=-s*o,t[2]=-n*o,t[3]=r*o,t}function Qe(t,e){return t[0]=-e[0],t[1]=-e[1],t[2]=-e[2],t[3]=e[3],t}function Ke(t,e){let i=e[0]+e[4]+e[8],s;if(i>0)s=Math.sqrt(i+1),t[3]=.5*s,s=.5/s,t[0]=(e[5]-e[7])*s,t[1]=(e[6]-e[2])*s,t[2]=(e[1]-e[3])*s;else{let n=0;e[4]>e[0]&&(n=1),e[8]>e[n*3+n]&&(n=2);let r=(n+1)%3,a=(n+2)%3;s=Math.sqrt(e[n*3+n]-e[r*3+r]-e[a*3+a]+1),t[n]=.5*s,s=.5/s,t[3]=(e[r*3+a]-e[a*3+r])*s,t[r]=(e[r*3+n]+e[n*3+r])*s,t[a]=(e[a*3+n]+e[n*3+a])*s}return t}function Je(t,e,i="YXZ"){let s=Math.sin(e[0]*.5),n=Math.cos(e[0]*.5),r=Math.sin(e[1]*.5),a=Math.cos(e[1]*.5),o=Math.sin(e[2]*.5),l=Math.cos(e[2]*.5);return i==="XYZ"?(t[0]=s*a*l+n*r*o,t[1]=n*r*l-s*a*o,t[2]=n*a*o+s*r*l,t[3]=n*a*l-s*r*o):i==="YXZ"?(t[0]=s*a*l+n*r*o,t[1]=n*r*l-s*a*o,t[2]=n*a*o-s*r*l,t[3]=n*a*l+s*r*o):i==="ZXY"?(t[0]=s*a*l-n*r*o,t[1]=n*r*l+s*a*o,t[2]=n*a*o+s*r*l,t[3]=n*a*l-s*r*o):i==="ZYX"?(t[0]=s*a*l-n*r*o,t[1]=n*r*l+s*a*o,t[2]=n*a*o-s*r*l,t[3]=n*a*l+s*r*o):i==="YZX"?(t[0]=s*a*l+n*r*o,t[1]=n*r*l+s*a*o,t[2]=n*a*o-s*r*l,t[3]=n*a*l-s*r*o):i==="XZY"&&(t[0]=s*a*l-n*r*o,t[1]=n*r*l-s*a*o,t[2]=n*a*o+s*r*l,t[3]=n*a*l+s*r*o),t}const et=Ue,tt=Ve,it=$e,st=We;class nt extends Array{constructor(e=0,i=0,s=0,n=1){return super(e,i,s,n),this.onChange=()=>{},this}get x(){return this[0]}get y(){return this[1]}get z(){return this[2]}get w(){return this[3]}set x(e){this[0]=e,this.onChange()}set y(e){this[1]=e,this.onChange()}set z(e){this[2]=e,this.onChange()}set w(e){this[3]=e,this.onChange()}identity(){return Xe(this),this.onChange(),this}set(e,i,s,n){return e.length?this.copy(e):(tt(this,e,i,s,n),this.onChange(),this)}rotateX(e){return qe(this,this,e),this.onChange(),this}rotateY(e){return Ze(this,this,e),this.onChange(),this}rotateZ(e){return He(this,this,e),this.onChange(),this}inverse(e=this){return je(this,e),this.onChange(),this}conjugate(e=this){return Qe(this,e),this.onChange(),this}copy(e){return et(this,e),this.onChange(),this}normalize(e=this){return st(this,e),this.onChange(),this}multiply(e,i){return i?te(this,e,i):te(this,this,e),this.onChange(),this}dot(e){return it(this,e)}fromMatrix3(e){return Ke(this,e),this.onChange(),this}fromEuler(e){return Je(this,e,e.order),this}fromAxisAngle(e,i){return Ge(this,e,i),this.onChange(),this}slerp(e,i){return Ye(this,this,e,i),this.onChange(),this}fromArray(e,i=0){return this[0]=e[i],this[1]=e[i+1],this[2]=e[i+2],this[3]=e[i+3],this.onChange(),this}toArray(e=[],i=0){return e[i]=this[0],e[i+1]=this[1],e[i+2]=this[2],e[i+3]=this[3],e}}const rt=1e-6;function at(t,e){return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15],t}function ot(t,e,i,s,n,r,a,o,l,h,c,u,f,d,p,g,m){return t[0]=e,t[1]=i,t[2]=s,t[3]=n,t[4]=r,t[5]=a,t[6]=o,t[7]=l,t[8]=h,t[9]=c,t[10]=u,t[11]=f,t[12]=d,t[13]=p,t[14]=g,t[15]=m,t}function lt(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t}function ht(t,e){let i=e[0],s=e[1],n=e[2],r=e[3],a=e[4],o=e[5],l=e[6],h=e[7],c=e[8],u=e[9],f=e[10],d=e[11],p=e[12],g=e[13],m=e[14],v=e[15],w=i*o-s*a,y=i*l-n*a,_=i*h-r*a,x=s*l-n*o,b=s*h-r*o,E=n*h-r*l,C=c*g-u*p,z=c*m-f*p,S=c*v-d*p,F=u*m-f*g,A=u*v-d*g,B=f*v-d*m,M=w*B-y*A+_*F+x*S-b*z+E*C;return M?(M=1/M,t[0]=(o*B-l*A+h*F)*M,t[1]=(n*A-s*B-r*F)*M,t[2]=(g*E-m*b+v*x)*M,t[3]=(f*b-u*E-d*x)*M,t[4]=(l*S-a*B-h*z)*M,t[5]=(i*B-n*S+r*z)*M,t[6]=(m*_-p*E-v*y)*M,t[7]=(c*E-f*_+d*y)*M,t[8]=(a*A-o*S+h*C)*M,t[9]=(s*S-i*A-r*C)*M,t[10]=(p*b-g*_+v*w)*M,t[11]=(u*_-c*b-d*w)*M,t[12]=(o*z-a*F-l*C)*M,t[13]=(i*F-s*z+n*C)*M,t[14]=(g*y-p*x-m*w)*M,t[15]=(c*x-u*y+f*w)*M,t):null}function ct(t){let e=t[0],i=t[1],s=t[2],n=t[3],r=t[4],a=t[5],o=t[6],l=t[7],h=t[8],c=t[9],u=t[10],f=t[11],d=t[12],p=t[13],g=t[14],m=t[15],v=e*a-i*r,w=e*o-s*r,y=e*l-n*r,_=i*o-s*a,x=i*l-n*a,b=s*l-n*o,E=h*p-c*d,C=h*g-u*d,z=h*m-f*d,S=c*g-u*p,F=c*m-f*p,A=u*m-f*g;return v*A-w*F+y*S+_*z-x*C+b*E}function ie(t,e,i){let s=e[0],n=e[1],r=e[2],a=e[3],o=e[4],l=e[5],h=e[6],c=e[7],u=e[8],f=e[9],d=e[10],p=e[11],g=e[12],m=e[13],v=e[14],w=e[15],y=i[0],_=i[1],x=i[2],b=i[3];return t[0]=y*s+_*o+x*u+b*g,t[1]=y*n+_*l+x*f+b*m,t[2]=y*r+_*h+x*d+b*v,t[3]=y*a+_*c+x*p+b*w,y=i[4],_=i[5],x=i[6],b=i[7],t[4]=y*s+_*o+x*u+b*g,t[5]=y*n+_*l+x*f+b*m,t[6]=y*r+_*h+x*d+b*v,t[7]=y*a+_*c+x*p+b*w,y=i[8],_=i[9],x=i[10],b=i[11],t[8]=y*s+_*o+x*u+b*g,t[9]=y*n+_*l+x*f+b*m,t[10]=y*r+_*h+x*d+b*v,t[11]=y*a+_*c+x*p+b*w,y=i[12],_=i[13],x=i[14],b=i[15],t[12]=y*s+_*o+x*u+b*g,t[13]=y*n+_*l+x*f+b*m,t[14]=y*r+_*h+x*d+b*v,t[15]=y*a+_*c+x*p+b*w,t}function ft(t,e,i){let s=i[0],n=i[1],r=i[2],a,o,l,h,c,u,f,d,p,g,m,v;return e===t?(t[12]=e[0]*s+e[4]*n+e[8]*r+e[12],t[13]=e[1]*s+e[5]*n+e[9]*r+e[13],t[14]=e[2]*s+e[6]*n+e[10]*r+e[14],t[15]=e[3]*s+e[7]*n+e[11]*r+e[15]):(a=e[0],o=e[1],l=e[2],h=e[3],c=e[4],u=e[5],f=e[6],d=e[7],p=e[8],g=e[9],m=e[10],v=e[11],t[0]=a,t[1]=o,t[2]=l,t[3]=h,t[4]=c,t[5]=u,t[6]=f,t[7]=d,t[8]=p,t[9]=g,t[10]=m,t[11]=v,t[12]=a*s+c*n+p*r+e[12],t[13]=o*s+u*n+g*r+e[13],t[14]=l*s+f*n+m*r+e[14],t[15]=h*s+d*n+v*r+e[15]),t}function ut(t,e,i){let s=i[0],n=i[1],r=i[2];return t[0]=e[0]*s,t[1]=e[1]*s,t[2]=e[2]*s,t[3]=e[3]*s,t[4]=e[4]*n,t[5]=e[5]*n,t[6]=e[6]*n,t[7]=e[7]*n,t[8]=e[8]*r,t[9]=e[9]*r,t[10]=e[10]*r,t[11]=e[11]*r,t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15],t}function dt(t,e,i,s){let n=s[0],r=s[1],a=s[2],o=Math.hypot(n,r,a),l,h,c,u,f,d,p,g,m,v,w,y,_,x,b,E,C,z,S,F,A,B,M,k;return Math.abs(o)<rt?null:(o=1/o,n*=o,r*=o,a*=o,l=Math.sin(i),h=Math.cos(i),c=1-h,u=e[0],f=e[1],d=e[2],p=e[3],g=e[4],m=e[5],v=e[6],w=e[7],y=e[8],_=e[9],x=e[10],b=e[11],E=n*n*c+h,C=r*n*c+a*l,z=a*n*c-r*l,S=n*r*c-a*l,F=r*r*c+h,A=a*r*c+n*l,B=n*a*c+r*l,M=r*a*c-n*l,k=a*a*c+h,t[0]=u*E+g*C+y*z,t[1]=f*E+m*C+_*z,t[2]=d*E+v*C+x*z,t[3]=p*E+w*C+b*z,t[4]=u*S+g*F+y*A,t[5]=f*S+m*F+_*A,t[6]=d*S+v*F+x*A,t[7]=p*S+w*F+b*A,t[8]=u*B+g*M+y*k,t[9]=f*B+m*M+_*k,t[10]=d*B+v*M+x*k,t[11]=p*B+w*M+b*k,e!==t&&(t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]),t)}function pt(t,e){return t[0]=e[12],t[1]=e[13],t[2]=e[14],t}function se(t,e){let i=e[0],s=e[1],n=e[2],r=e[4],a=e[5],o=e[6],l=e[8],h=e[9],c=e[10];return t[0]=Math.hypot(i,s,n),t[1]=Math.hypot(r,a,o),t[2]=Math.hypot(l,h,c),t}function mt(t){let e=t[0],i=t[1],s=t[2],n=t[4],r=t[5],a=t[6],o=t[8],l=t[9],h=t[10];const c=e*e+i*i+s*s,u=n*n+r*r+a*a,f=o*o+l*l+h*h;return Math.sqrt(Math.max(c,u,f))}const gt=function(){const t=[1,1,1];return function(e,i){let s=t;se(s,i);let n=1/s[0],r=1/s[1],a=1/s[2],o=i[0]*n,l=i[1]*r,h=i[2]*a,c=i[4]*n,u=i[5]*r,f=i[6]*a,d=i[8]*n,p=i[9]*r,g=i[10]*a,m=o+u+g,v=0;return m>0?(v=Math.sqrt(m+1)*2,e[3]=.25*v,e[0]=(f-p)/v,e[1]=(d-h)/v,e[2]=(l-c)/v):o>u&&o>g?(v=Math.sqrt(1+o-u-g)*2,e[3]=(f-p)/v,e[0]=.25*v,e[1]=(l+c)/v,e[2]=(d+h)/v):u>g?(v=Math.sqrt(1+u-o-g)*2,e[3]=(d-h)/v,e[0]=(l+c)/v,e[1]=.25*v,e[2]=(f+p)/v):(v=Math.sqrt(1+g-o-u)*2,e[3]=(l-c)/v,e[0]=(d+h)/v,e[1]=(f+p)/v,e[2]=.25*v),e}}();function vt(t,e,i,s){let n=e[0],r=e[1],a=e[2],o=e[3],l=n+n,h=r+r,c=a+a,u=n*l,f=n*h,d=n*c,p=r*h,g=r*c,m=a*c,v=o*l,w=o*h,y=o*c,_=s[0],x=s[1],b=s[2];return t[0]=(1-(p+m))*_,t[1]=(f+y)*_,t[2]=(d-w)*_,t[3]=0,t[4]=(f-y)*x,t[5]=(1-(u+m))*x,t[6]=(g+v)*x,t[7]=0,t[8]=(d+w)*b,t[9]=(g-v)*b,t[10]=(1-(u+p))*b,t[11]=0,t[12]=i[0],t[13]=i[1],t[14]=i[2],t[15]=1,t}function _t(t,e){let i=e[0],s=e[1],n=e[2],r=e[3],a=i+i,o=s+s,l=n+n,h=i*a,c=s*a,u=s*o,f=n*a,d=n*o,p=n*l,g=r*a,m=r*o,v=r*l;return t[0]=1-u-p,t[1]=c+v,t[2]=f-m,t[3]=0,t[4]=c-v,t[5]=1-h-p,t[6]=d+g,t[7]=0,t[8]=f+m,t[9]=d-g,t[10]=1-h-u,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t}function yt(t,e,i,s,n){let r=1/Math.tan(e/2),a=1/(s-n);return t[0]=r/i,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=r,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=(n+s)*a,t[11]=-1,t[12]=0,t[13]=0,t[14]=2*n*s*a,t[15]=0,t}function bt(t,e,i,s,n,r,a){let o=1/(e-i),l=1/(s-n),h=1/(r-a);return t[0]=-2*o,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=-2*l,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=2*h,t[11]=0,t[12]=(e+i)*o,t[13]=(n+s)*l,t[14]=(a+r)*h,t[15]=1,t}function xt(t,e,i,s){let n=e[0],r=e[1],a=e[2],o=s[0],l=s[1],h=s[2],c=n-i[0],u=r-i[1],f=a-i[2],d=c*c+u*u+f*f;d===0?f=1:(d=1/Math.sqrt(d),c*=d,u*=d,f*=d);let p=l*f-h*u,g=h*c-o*f,m=o*u-l*c;return d=p*p+g*g+m*m,d===0&&(h?o+=1e-6:l?h+=1e-6:l+=1e-6,p=l*f-h*u,g=h*c-o*f,m=o*u-l*c,d=p*p+g*g+m*m),d=1/Math.sqrt(d),p*=d,g*=d,m*=d,t[0]=p,t[1]=g,t[2]=m,t[3]=0,t[4]=u*m-f*g,t[5]=f*p-c*m,t[6]=c*g-u*p,t[7]=0,t[8]=c,t[9]=u,t[10]=f,t[11]=0,t[12]=n,t[13]=r,t[14]=a,t[15]=1,t}function ne(t,e,i){return t[0]=e[0]+i[0],t[1]=e[1]+i[1],t[2]=e[2]+i[2],t[3]=e[3]+i[3],t[4]=e[4]+i[4],t[5]=e[5]+i[5],t[6]=e[6]+i[6],t[7]=e[7]+i[7],t[8]=e[8]+i[8],t[9]=e[9]+i[9],t[10]=e[10]+i[10],t[11]=e[11]+i[11],t[12]=e[12]+i[12],t[13]=e[13]+i[13],t[14]=e[14]+i[14],t[15]=e[15]+i[15],t}function re(t,e,i){return t[0]=e[0]-i[0],t[1]=e[1]-i[1],t[2]=e[2]-i[2],t[3]=e[3]-i[3],t[4]=e[4]-i[4],t[5]=e[5]-i[5],t[6]=e[6]-i[6],t[7]=e[7]-i[7],t[8]=e[8]-i[8],t[9]=e[9]-i[9],t[10]=e[10]-i[10],t[11]=e[11]-i[11],t[12]=e[12]-i[12],t[13]=e[13]-i[13],t[14]=e[14]-i[14],t[15]=e[15]-i[15],t}function Mt(t,e,i){return t[0]=e[0]*i,t[1]=e[1]*i,t[2]=e[2]*i,t[3]=e[3]*i,t[4]=e[4]*i,t[5]=e[5]*i,t[6]=e[6]*i,t[7]=e[7]*i,t[8]=e[8]*i,t[9]=e[9]*i,t[10]=e[10]*i,t[11]=e[11]*i,t[12]=e[12]*i,t[13]=e[13]*i,t[14]=e[14]*i,t[15]=e[15]*i,t}class L extends Array{constructor(e=1,i=0,s=0,n=0,r=0,a=1,o=0,l=0,h=0,c=0,u=1,f=0,d=0,p=0,g=0,m=1){return super(e,i,s,n,r,a,o,l,h,c,u,f,d,p,g,m),this}get x(){return this[12]}get y(){return this[13]}get z(){return this[14]}get w(){return this[15]}set x(e){this[12]=e}set y(e){this[13]=e}set z(e){this[14]=e}set w(e){this[15]=e}set(e,i,s,n,r,a,o,l,h,c,u,f,d,p,g,m){return e.length?this.copy(e):(ot(this,e,i,s,n,r,a,o,l,h,c,u,f,d,p,g,m),this)}translate(e,i=this){return ft(this,i,e),this}rotate(e,i,s=this){return dt(this,s,e,i),this}scale(e,i=this){return ut(this,i,typeof e=="number"?[e,e,e]:e),this}add(e,i){return i?ne(this,e,i):ne(this,this,e),this}sub(e,i){return i?re(this,e,i):re(this,this,e),this}multiply(e,i){return e.length?i?ie(this,e,i):ie(this,this,e):Mt(this,this,e),this}identity(){return lt(this),this}copy(e){return at(this,e),this}fromPerspective({fov:e,aspect:i,near:s,far:n}={}){return yt(this,e,i,s,n),this}fromOrthogonal({left:e,right:i,bottom:s,top:n,near:r,far:a}){return bt(this,e,i,s,n,r,a),this}fromQuaternion(e){return _t(this,e),this}setPosition(e){return this.x=e[0],this.y=e[1],this.z=e[2],this}inverse(e=this){return ht(this,e),this}compose(e,i,s){return vt(this,e,i,s),this}getRotation(e){return gt(e,this),this}getTranslation(e){return pt(e,this),this}getScaling(e){return se(e,this),this}getMaxScaleOnAxis(){return mt(this)}lookAt(e,i,s){return xt(this,e,i,s),this}determinant(){return ct(this)}fromArray(e,i=0){return this[0]=e[i],this[1]=e[i+1],this[2]=e[i+2],this[3]=e[i+3],this[4]=e[i+4],this[5]=e[i+5],this[6]=e[i+6],this[7]=e[i+7],this[8]=e[i+8],this[9]=e[i+9],this[10]=e[i+10],this[11]=e[i+11],this[12]=e[i+12],this[13]=e[i+13],this[14]=e[i+14],this[15]=e[i+15],this}toArray(e=[],i=0){return e[i]=this[0],e[i+1]=this[1],e[i+2]=this[2],e[i+3]=this[3],e[i+4]=this[4],e[i+5]=this[5],e[i+6]=this[6],e[i+7]=this[7],e[i+8]=this[8],e[i+9]=this[9],e[i+10]=this[10],e[i+11]=this[11],e[i+12]=this[12],e[i+13]=this[13],e[i+14]=this[14],e[i+15]=this[15],e}}function wt(t,e,i="YXZ"){return i==="XYZ"?(t[1]=Math.asin(Math.min(Math.max(e[8],-1),1)),Math.abs(e[8])<.99999?(t[0]=Math.atan2(-e[9],e[10]),t[2]=Math.atan2(-e[4],e[0])):(t[0]=Math.atan2(e[6],e[5]),t[2]=0)):i==="YXZ"?(t[0]=Math.asin(-Math.min(Math.max(e[9],-1),1)),Math.abs(e[9])<.99999?(t[1]=Math.atan2(e[8],e[10]),t[2]=Math.atan2(e[1],e[5])):(t[1]=Math.atan2(-e[2],e[0]),t[2]=0)):i==="ZXY"?(t[0]=Math.asin(Math.min(Math.max(e[6],-1),1)),Math.abs(e[6])<.99999?(t[1]=Math.atan2(-e[2],e[10]),t[2]=Math.atan2(-e[4],e[5])):(t[1]=0,t[2]=Math.atan2(e[1],e[0]))):i==="ZYX"?(t[1]=Math.asin(-Math.min(Math.max(e[2],-1),1)),Math.abs(e[2])<.99999?(t[0]=Math.atan2(e[6],e[10]),t[2]=Math.atan2(e[1],e[0])):(t[0]=0,t[2]=Math.atan2(-e[4],e[5]))):i==="YZX"?(t[2]=Math.asin(Math.min(Math.max(e[1],-1),1)),Math.abs(e[1])<.99999?(t[0]=Math.atan2(-e[9],e[5]),t[1]=Math.atan2(-e[2],e[0])):(t[0]=0,t[1]=Math.atan2(e[8],e[10]))):i==="XZY"&&(t[2]=Math.asin(-Math.min(Math.max(e[4],-1),1)),Math.abs(e[4])<.99999?(t[0]=Math.atan2(e[6],e[5]),t[1]=Math.atan2(e[8],e[0])):(t[0]=Math.atan2(-e[9],e[10]),t[1]=0)),t}const ae=new L;class St extends Array{constructor(e=0,i=e,s=e,n="YXZ"){return super(e,i,s),this.order=n,this.onChange=()=>{},this}get x(){return this[0]}get y(){return this[1]}get z(){return this[2]}set x(e){this[0]=e,this.onChange()}set y(e){this[1]=e,this.onChange()}set z(e){this[2]=e,this.onChange()}set(e,i=e,s=e){return e.length?this.copy(e):(this[0]=e,this[1]=i,this[2]=s,this.onChange(),this)}copy(e){return this[0]=e[0],this[1]=e[1],this[2]=e[2],this.onChange(),this}reorder(e){return this.order=e,this.onChange(),this}fromRotationMatrix(e,i=this.order){return wt(this,e,i),this.onChange(),this}fromQuaternion(e,i=this.order){return ae.fromQuaternion(e),this.fromRotationMatrix(ae,i)}fromArray(e,i=0){return this[0]=e[i],this[1]=e[i+1],this[2]=e[i+2],this}toArray(e=[],i=0){return e[i]=this[0],e[i+1]=this[1],e[i+2]=this[2],e}}class oe{constructor(){this.parent=null,this.children=[],this.visible=!0,this.matrix=new L,this.worldMatrix=new L,this.matrixAutoUpdate=!0,this.worldMatrixNeedsUpdate=!1,this.position=new R,this.quaternion=new nt,this.scale=new R(1),this.rotation=new St,this.up=new R(0,1,0),this.rotation.onChange=()=>this.quaternion.fromEuler(this.rotation),this.quaternion.onChange=()=>this.rotation.fromQuaternion(this.quaternion)}setParent(e,i=!0){this.parent&&e!==this.parent&&this.parent.removeChild(this,!1),this.parent=e,i&&e&&e.addChild(this,!1)}addChild(e,i=!0){~this.children.indexOf(e)||this.children.push(e),i&&e.setParent(this,!1)}removeChild(e,i=!0){~this.children.indexOf(e)&&this.children.splice(this.children.indexOf(e),1),i&&e.setParent(null,!1)}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.worldMatrixNeedsUpdate||e)&&(this.parent===null?this.worldMatrix.copy(this.matrix):this.worldMatrix.multiply(this.parent.worldMatrix,this.matrix),this.worldMatrixNeedsUpdate=!1,e=!0);for(let i=0,s=this.children.length;i<s;i++)this.children[i].updateMatrixWorld(e)}updateMatrix(){this.matrix.compose(this.quaternion,this.position,this.scale),this.worldMatrixNeedsUpdate=!0}traverse(e){if(!e(this))for(let i=0,s=this.children.length;i<s;i++)this.children[i].traverse(e)}decompose(){this.matrix.getTranslation(this.position),this.matrix.getRotation(this.quaternion),this.matrix.getScaling(this.scale),this.rotation.fromQuaternion(this.quaternion)}lookAt(e,i=!1){i?this.matrix.lookAt(this.position,e,this.up):this.matrix.lookAt(e,this.position,this.up),this.matrix.getRotation(this.quaternion),this.rotation.fromQuaternion(this.quaternion)}}function At(t,e){return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[4],t[4]=e[5],t[5]=e[6],t[6]=e[8],t[7]=e[9],t[8]=e[10],t}function Et(t,e){let i=e[0],s=e[1],n=e[2],r=e[3],a=i+i,o=s+s,l=n+n,h=i*a,c=s*a,u=s*o,f=n*a,d=n*o,p=n*l,g=r*a,m=r*o,v=r*l;return t[0]=1-u-p,t[3]=c-v,t[6]=f+m,t[1]=c+v,t[4]=1-h-p,t[7]=d-g,t[2]=f-m,t[5]=d+g,t[8]=1-h-u,t}function Ct(t,e){return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t}function zt(t,e,i,s,n,r,a,o,l,h){return t[0]=e,t[1]=i,t[2]=s,t[3]=n,t[4]=r,t[5]=a,t[6]=o,t[7]=l,t[8]=h,t}function Ft(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=1,t[5]=0,t[6]=0,t[7]=0,t[8]=1,t}function Bt(t,e){let i=e[0],s=e[1],n=e[2],r=e[3],a=e[4],o=e[5],l=e[6],h=e[7],c=e[8],u=c*a-o*h,f=-c*r+o*l,d=h*r-a*l,p=i*u+s*f+n*d;return p?(p=1/p,t[0]=u*p,t[1]=(-c*s+n*h)*p,t[2]=(o*s-n*a)*p,t[3]=f*p,t[4]=(c*i-n*l)*p,t[5]=(-o*i+n*r)*p,t[6]=d*p,t[7]=(-h*i+s*l)*p,t[8]=(a*i-s*r)*p,t):null}function le(t,e,i){let s=e[0],n=e[1],r=e[2],a=e[3],o=e[4],l=e[5],h=e[6],c=e[7],u=e[8],f=i[0],d=i[1],p=i[2],g=i[3],m=i[4],v=i[5],w=i[6],y=i[7],_=i[8];return t[0]=f*s+d*a+p*h,t[1]=f*n+d*o+p*c,t[2]=f*r+d*l+p*u,t[3]=g*s+m*a+v*h,t[4]=g*n+m*o+v*c,t[5]=g*r+m*l+v*u,t[6]=w*s+y*a+_*h,t[7]=w*n+y*o+_*c,t[8]=w*r+y*l+_*u,t}function It(t,e,i){let s=e[0],n=e[1],r=e[2],a=e[3],o=e[4],l=e[5],h=e[6],c=e[7],u=e[8],f=i[0],d=i[1];return t[0]=s,t[1]=n,t[2]=r,t[3]=a,t[4]=o,t[5]=l,t[6]=f*s+d*a+h,t[7]=f*n+d*o+c,t[8]=f*r+d*l+u,t}function Dt(t,e,i){let s=e[0],n=e[1],r=e[2],a=e[3],o=e[4],l=e[5],h=e[6],c=e[7],u=e[8],f=Math.sin(i),d=Math.cos(i);return t[0]=d*s+f*a,t[1]=d*n+f*o,t[2]=d*r+f*l,t[3]=d*a-f*s,t[4]=d*o-f*n,t[5]=d*l-f*r,t[6]=h,t[7]=c,t[8]=u,t}function Rt(t,e,i){let s=i[0],n=i[1];return t[0]=s*e[0],t[1]=s*e[1],t[2]=s*e[2],t[3]=n*e[3],t[4]=n*e[4],t[5]=n*e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t}function Ot(t,e){let i=e[0],s=e[1],n=e[2],r=e[3],a=e[4],o=e[5],l=e[6],h=e[7],c=e[8],u=e[9],f=e[10],d=e[11],p=e[12],g=e[13],m=e[14],v=e[15],w=i*o-s*a,y=i*l-n*a,_=i*h-r*a,x=s*l-n*o,b=s*h-r*o,E=n*h-r*l,C=c*g-u*p,z=c*m-f*p,S=c*v-d*p,F=u*m-f*g,A=u*v-d*g,B=f*v-d*m,M=w*B-y*A+_*F+x*S-b*z+E*C;return M?(M=1/M,t[0]=(o*B-l*A+h*F)*M,t[1]=(l*S-a*B-h*z)*M,t[2]=(a*A-o*S+h*C)*M,t[3]=(n*A-s*B-r*F)*M,t[4]=(i*B-n*S+r*z)*M,t[5]=(s*S-i*A-r*C)*M,t[6]=(g*E-m*b+v*x)*M,t[7]=(m*_-p*E-v*y)*M,t[8]=(p*b-g*_+v*w)*M,t):null}class Tt extends Array{constructor(e=1,i=0,s=0,n=0,r=1,a=0,o=0,l=0,h=1){return super(e,i,s,n,r,a,o,l,h),this}set(e,i,s,n,r,a,o,l,h){return e.length?this.copy(e):(zt(this,e,i,s,n,r,a,o,l,h),this)}translate(e,i=this){return It(this,i,e),this}rotate(e,i=this){return Dt(this,i,e),this}scale(e,i=this){return Rt(this,i,e),this}multiply(e,i){return i?le(this,e,i):le(this,this,e),this}identity(){return Ft(this),this}copy(e){return Ct(this,e),this}fromMatrix4(e){return At(this,e),this}fromQuaternion(e){return Et(this,e),this}fromBasis(e,i,s){return this.set(e[0],e[1],e[2],i[0],i[1],i[2],s[0],s[1],s[2]),this}inverse(e=this){return Bt(this,e),this}getNormalMatrix(e){return Ot(this,e),this}}let kt=0;class Lt extends oe{constructor(e,{geometry:i,program:s,mode:n=e.TRIANGLES,frustumCulled:r=!0,renderOrder:a=0}={}){super(),e.canvas||console.error("gl not passed as first argument to Mesh"),this.gl=e,this.id=kt++,this.geometry=i,this.program=s,this.mode=n,this.frustumCulled=r,this.renderOrder=a,this.modelViewMatrix=new L,this.normalMatrix=new Tt,this.beforeRenderCallbacks=[],this.afterRenderCallbacks=[]}onBeforeRender(e){return this.beforeRenderCallbacks.push(e),this}onAfterRender(e){return this.afterRenderCallbacks.push(e),this}draw({camera:e}={}){e&&(this.program.uniforms.modelMatrix||Object.assign(this.program.uniforms,{modelMatrix:{value:null},viewMatrix:{value:null},modelViewMatrix:{value:null},normalMatrix:{value:null},projectionMatrix:{value:null},cameraPosition:{value:null}}),this.program.uniforms.projectionMatrix.value=e.projectionMatrix,this.program.uniforms.cameraPosition.value=e.worldPosition,this.program.uniforms.viewMatrix.value=e.viewMatrix,this.modelViewMatrix.multiply(e.viewMatrix,this.worldMatrix),this.normalMatrix.getNormalMatrix(this.modelViewMatrix),this.program.uniforms.modelMatrix.value=this.worldMatrix,this.program.uniforms.modelViewMatrix.value=this.modelViewMatrix,this.program.uniforms.normalMatrix.value=this.normalMatrix),this.beforeRenderCallbacks.forEach(s=>s&&s({mesh:this,camera:e}));let i=this.program.cullFace&&this.worldMatrix.determinant()<0;this.program.use({flipFaces:i}),this.geometry.draw({mode:this.mode,program:this.program}),this.afterRenderCallbacks.forEach(s=>s&&s({mesh:this,camera:e}))}}const he={black:"#000000",white:"#ffffff",red:"#ff0000",green:"#00ff00",blue:"#0000ff",fuchsia:"#ff00ff",cyan:"#00ffff",yellow:"#ffff00",orange:"#ff8000"};function ce(t){t.length===4&&(t=t[0]+t[1]+t[1]+t[2]+t[2]+t[3]+t[3]);const e=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(t);return e||console.warn(`Unable to convert hex string ${t} to rgb values`),[parseInt(e[1],16)/255,parseInt(e[2],16)/255,parseInt(e[3],16)/255]}function Pt(t){return t=parseInt(t),[(t>>16&255)/255,(t>>8&255)/255,(t&255)/255]}function fe(t){return t===void 0?[0,0,0]:arguments.length===3?arguments:isNaN(t)?t[0]==="#"?ce(t):he[t.toLowerCase()]?ce(he[t.toLowerCase()]):(console.warn("Color format not recognised"),[0,0,0]):Pt(t)}class I extends Array{constructor(e){return Array.isArray(e)?super(...e):super(...fe(...arguments))}get r(){return this[0]}get g(){return this[1]}get b(){return this[2]}set r(e){this[0]=e}set g(e){this[1]=e}set b(e){this[2]=e}set(e){return Array.isArray(e)?this.copy(e):this.copy(fe(...arguments))}copy(e){return this[0]=e[0],this[1]=e[1],this[2]=e[2],this}}class Nt extends De{constructor(e,{attributes:i={}}={}){Object.assign(i,{position:{size:2,data:new Float32Array([-1,-1,3,-1,-1,3])},uv:{size:2,data:new Float32Array([0,0,2,0,0,2])}}),super(e,i)}}const Ut=t=>`
    precision highp float;

    uniform float u_time;
    uniform vec4 u_resolution;
    uniform bool u_applyMouse;
    uniform int u_mouseType;
    uniform float u_mouseRadius;
    uniform vec2 u_mouse;
    uniform int u_shapeStyle;
    uniform float u_speed;
    uniform vec3 u_color;
    uniform bool u_applyShading;
    uniform bool u_applyLight1;
    uniform bool u_applyLight2;
    uniform bool u_applyRotation;
    uniform bool u_applyAura;
    uniform vec3 u_auraColor;
    uniform float u_auraSpread;
    uniform vec3 u_specularColor;
    uniform float u_ambientIntensity;
    uniform float u_light1Intensity;
    uniform float u_light2Intensity;
    uniform float u_shininess;
    uniform vec2 u_lookAt;
    uniform float u_cameraZoom;
    uniform vec3 u_light1Position;
    uniform vec3 u_light2Position;
    uniform vec3 u_light1Color;
    uniform vec3 u_light2Color;

    const int MAX_MARCHING_STEPS = 150;
    const float MAX_DIST = 8.0;
    const float MIN_DIST = 2.0;
    const float EPSILON = 0.001;

    #define PI 3.14159265359

    float rand(vec2 co) {
        return fract(sin(dot(co, vec2(12.9898, 78.233))) * 43758.5453);
    }

    mat4 rotation3d(vec3 axis, float angle) {
        axis = normalize(axis);
        float s = sin(angle);
        float c = cos(angle);
        float oc = 1.0 - c;

        return mat4(oc * axis.x * axis.x + c, oc * axis.x * axis.y - axis.z * s, oc * axis.z * axis.x + axis.y * s, 0.0, oc * axis.x * axis.y + axis.z * s, oc * axis.y * axis.y + c, oc * axis.y * axis.z - axis.x * s, 0.0, oc * axis.z * axis.x - axis.y * s, oc * axis.y * axis.z + axis.x * s, oc * axis.z * axis.z + c, 0.0, 0.0, 0.0, 0.0, 1.0);
    }

    vec3 rotate(vec3 v, vec3 axis, float angle) {
        return (rotation3d(axis, angle) * vec4(v, 1.0)).xyz;
    }

    // credits @simondev course

    // Gamma correction
    vec3 correctGamma(vec3 color) {
        return pow(color, vec3(1.0 / 2.2));
    }

    // credits: https://iquilezles.org/articles/distfunctions/
    // polynomial smooth min 1 (k=0.1)
    float smin(float a, float b, float k) {
        float h = clamp(0.5 + 0.5 * (b - a) / k, 0.0, 1.0);
        return mix(b, a, h) - k * h * (1.0 - h);
    }

    // SDF Sphere
    float sdSphere(vec3 position, float radius) {
        return length(position) - radius;
    }

    float sdMetaBalls(vec3 position, float radius, float speedFactor, vec2 uv) {
        ${[`
            float time = u_time * 30. * speedFactor;
            float balls = sdSphere(position, radius);
            vec2 diff = vec2(0.0);
            float nball = 0.0;
            for(float i = 0.0; i < 5.; i++) {
                float random = rand(vec2(i, -i));
                diff = vec2(sin(i + random * 4. + time), cos(i - random * 20. - time)) * .8;     // compact blob
                nball = sdSphere(position + vec3(diff, 0.0), radius / 2.);
                balls = smin(balls, nball, 0.7);
            }
            return balls;
        `,`
            float time = u_time * 30. * speedFactor;
            float balls = sdSphere(position, radius);
            vec2 diff = vec2(0.0);
            float nball = 0.0;
            for(float i = 0.0; i < 5.; i++) {
                diff = vec2(sin(i * 3. + time), cos(i + 1. * 1. - time)) * 1.;     // compact blob

                nball = sdSphere(position + vec3(diff, 0.0), radius / 2.);
                balls = smin(balls, nball, 0.7);
            }
            return balls;
        `,`
            float time = u_time * 30. * speedFactor;
            float balls = sdSphere(position, radius);
            vec2 diff = vec2(0.0);
            float nball = 0.0;
            for(float i = 0.0; i < 5.; i++) {
                float random = rand(vec2(i, -i));
                diff = vec2(sin(i * 3. - time), cos(i + random * 1. - time)) * 1.;     // compact blob
                nball = sdSphere(position + vec3(diff, 0.0), radius / 2.);
                balls = smin(balls, nball, 0.7);
            }
            return balls;
        `,`
            float time = u_time * 20. * speedFactor;
            float balls = sdSphere(position, radius);
            vec2 diff = vec2(0.0);
            float nball = 0.0;
            for(float i = 0.0; i < 5.; i++) {
                float random = rand(vec2(i, -i));
                diff = vec2(sin(i * 3. + time), sin(i + random * 1. + time)) * 1.2;     // compact blob

                nball = sdSphere(position + vec3(diff, 0.0), radius / 2.);
                balls = smin(balls, nball, 0.7);
            }
            return balls;
        `,`
            float time = u_time * 20. * speedFactor;
            float balls = sdSphere(position, radius);
            vec2 diff = vec2(0.0);
            float nball = 0.0;
            for(float i = 0.0; i < 5.; i++) {
                float random = rand(vec2(i, -i));

                diff = vec2(sin(i + random * 3. + time), cos(i - random * 2. - time)) * 1.;     // compact blob

                nball = sdSphere(position + vec3(diff, 0.0), radius / 2.);
                balls = smin(balls, nball, 0.7);
            }
            return balls;
        `,`
            float time = u_time * 20. * speedFactor;
            float balls = sdSphere(position, radius);
            vec2 diff = vec2(0.0);
            float nball = 0.0;
            for(float i = 0.0; i < 5.; i++) {
                float random = rand(vec2(i, i));
                diff = vec2(cos(i + uv.x + time) * cos(uv.y - time), sin(i + uv.y + time) * sin(uv.x - time)) * 1.;     // compact blob

                nball = sdSphere(position + vec3(diff, 0.0), radius / 2.);
                balls = smin(balls, nball, 0.7);
            }
            return balls;
        `,`
            float time = u_time * 20. * speedFactor;
            float balls = sdSphere(position, radius);
            vec2 diff = vec2(0.0);
            float nball = 0.0;
            for(float i = 0.0; i < 5.; i++) {
                float random = rand(vec2(i, i));
                diff = vec2(cos(i + uv.x + time) * cos(uv.y - time), sin(i + uv.y + time) * sin(uv.x - time)) * 1.5;     // compact blob

                nball = sdSphere(position + vec3(diff, 0.0), radius / 2.);
                balls = smin(balls, nball, 0.7);
            }
            return balls;
        `,`
            float time = u_time * 20. * speedFactor;
            float balls = sdSphere(position, radius);
            vec2 diff = vec2(0.0);
            float nball = 0.0;
            for(float i = 0.0; i < 5.; i++) {
                float random = rand(vec2(i, i));
                diff = vec2(cos(i + uv.x * position.y + time) * cos(uv.y + time), sin(i + uv.y * position.x + time) * sin(uv.x + time)) * 1.5;     // compact blob

                nball = sdSphere(position + vec3(diff, 0.0), radius / 2.);
                balls = smin(balls, nball, 0.7);
            }
            return balls;
        `,`
            float time = u_time * 20. * speedFactor;

            float balls = sdSphere(position, radius);
            vec2 diff = vec2(0.0);
            float nball = 0.0;
            for(float i = 0.0; i < 5.; i++) {
                float random = rand(vec2(i, i));
                diff = vec2(cos(i + uv.x + position.y + time) * cos(uv.y + random - time), sin(i + uv.y + position.x + time) * sin(uv.x + random)) * 1.5;     // compact blob

                nball = sdSphere(position + vec3(diff, 0.0), radius / 2.);
                balls = smin(balls, nball, 0.7);
            }
            return balls;
        `][parseInt(t)]}
    }

    float sdBlob(vec3 position, float radius) {
        float time = u_time * 60. * u_speed;
        float balls = sdSphere(position, radius);
        vec2 diff = vec2(0.0);
        float nball = 0.0;
        for(float i = 0.0; i < 3.; i++) {
            diff = vec2(sin(i * time), cos(i + time)) * 1.;
            nball = sdSphere(position + vec3(diff, 0.0) * .3, radius / 2.);
            balls = smin(balls, nball, 0.3);
        }

        return balls;
    }

    // SDF Scene
    float sdScene(vec3 position, vec2 uv) {
        float sdMouse = 1.;

        if(u_applyMouse) {
            vec2 mouse = u_mouse * u_cameraZoom;
            mouse.x *= u_resolution.x / u_resolution.y;
            vec3 mousepos = position;
            mousepos.xy -= mouse + vec2(-1. * u_lookAt.x, u_lookAt.y);
            // mousepos.x -= -1.f * u_lookAt.x;

            if(u_mouseType == 1) {
                sdMouse = sdSphere(mousepos, u_mouseRadius / 2.);
            } else if(u_mouseType == 2) {
                sdMouse = sdBlob(mousepos, u_mouseRadius / 2.);
            }
        }

        if(u_applyRotation) {
            vec3 rotatedPos = rotate(position, vec3(1., 1., 1.), u_time * 10.);
            position = rotatedPos;
        }

        float metaBalls = sdMetaBalls(position, .5, u_speed, uv);

        float scene = smin(metaBalls, sdMouse, 0.7);

        return scene;

    }

    float raymarcher3(vec3 rayOrigin, vec3 rayDirection, vec2 uv) {
        float depth = u_applyRotation ? u_cameraZoom - 2. : u_cameraZoom - .5;

        for(int i = 0; i < MAX_MARCHING_STEPS; i++) {
            float dist = sdScene(rayOrigin + depth * rayDirection, uv);
            if(dist < EPSILON) {
                return depth;
            }
            depth += dist;
            if(depth >= MAX_DIST) {
                return MAX_DIST;
            }

        }
        return MAX_DIST;
    }

    vec3 getNormal(vec3 p, vec2 uv) {
        float h = 0.0001; // replace by an appropriate value
        vec2 k = vec2(1, -1);
        return normalize(k.xyy * sdScene(p + k.xyy * h, uv) +
            k.yyx * sdScene(p + k.yyx * h, uv) +
            k.yxy * sdScene(p + k.yxy * h, uv) +
            k.xxx * sdScene(p + k.xxx * h, uv));
    }

    // mat3 camera(vec3 cameraPos, vec3 lookAtPoint) {
    //     vec3 cd = normalize(lookAtPoint - cameraPos); // camera direction
    //     vec3 cr = normalize(cross(vec3(0, 1, 0), cd)); // camera right
    //     vec3 cu = normalize(cross(cd, cr)); // camera up

    //     return mat3(-cr, cu, -cd);
    // }

    vec3 applyAura(vec3 normal, vec3 viewDirection) {
        float fresnel = 1. - dot(viewDirection, normal);
        fresnel = pow(fresnel, u_auraSpread);
        return u_auraColor * fresnel;
    }

    vec3 applyShading(vec3 normal, vec3 lightDirection, vec3 viewDirection, vec3 rayDirection) {
        vec3 ambient = u_ambientIntensity * u_color;
        vec3 diffuse = u_color * clamp(dot(normal, lightDirection), .0, 1.);
        vec3 halfVector = normalize(lightDirection + viewDirection);
        // vec3 specular = u_specularColor * pow(max(dot(reflect(-lightDirection, normal), viewDirection), 0.2f), u_shininess);
        vec3 specular = u_specularColor * pow(clamp(dot(normal, halfVector), 0., 1.), u_shininess);
        return ambient + diffuse + specular;
    }

    // https://github.com/glslify/glsl-sdf-normal/blob/master/index.glsl
    // vec3 calcNormal(vec3 p) {
    //     float eps = 0.001;
    //     const vec3 v1 = vec3(1.0, -1.0, -1.0);
    //     const vec3 v2 = vec3(-1.0, -1.0, 1.0);
    //     const vec3 v3 = vec3(-1.0, 1.0, -1.0);
    //     const vec3 v4 = vec3(1.0, 1.0, 1.0);
    //     return normalize(v1 * shapemeta(p + v1 * eps) +
    //         v2 * shapemeta(p + v2 * eps) +
    //         v3 * shapemeta(p + v3 * eps) +
    //         v4 * shapemeta(p + v4 * eps));
    // }

    void main() {

        vec2 uv = gl_FragCoord.xy / u_resolution.xy;   // Normalize UV
        uv -= 0.5;                                   // Shift UV to center
        uv.x *= u_resolution.x / u_resolution.y;      // Adjust to current screen aspect ratio

        // vec3 lookAt = vec3(u_lookAt, 0.f);
        // vec3 rayOrigin = vec3(0.f, 0.f, remap(u_cameraZoom, 1.f, 10.f, -10.f, -1.f));
        vec3 rayOrigin = vec3(-1. * u_lookAt.x, u_lookAt.y, u_cameraZoom);

        // vec3 rayDirection = camera(rayOrigin, lookAt) * normalize(vec3(uv, -1.f));
        vec3 rayDirection = normalize(vec3(uv, -1.));
        // float distance = raymarcher(rayOrigin, rayDirection, uv);

        float distance = raymarcher3(rayOrigin, rayDirection, uv);

        // Tranparent BG
        vec4 color = vec4(0.);

        if(distance > MAX_DIST - EPSILON) {
            gl_FragColor = color;
            return;
        }

            // Position for normal
        // vec3 position = rayOrigin + rayDirection * distance;

        vec3 position = rayOrigin + distance * rayDirection;

        // if(distance < MAX_RAY_DISTANCE) {
        vec3 normal = getNormal(position, uv);

        // vec3 normal = calcNormal(position);

        vec3 viewDirection = normalize(rayOrigin - position);
        vec3 finalColor = u_color;

        if(u_applyShading) {

            vec3 lightDirection1 = normalize(u_light1Position - position);
            vec3 phong = applyShading(normal, lightDirection1, viewDirection, rayDirection);

            if(u_applyLight1) {
                vec3 light = u_light1Intensity * u_light1Color;
                finalColor = light * phong;
            } else {
                finalColor = phong;
            }

            if(u_applyLight2) {
                vec3 lightDirection2 = normalize(u_light2Position - position);
                vec3 phong2 = applyShading(normal, lightDirection2, viewDirection, rayDirection);
                vec3 light2 = u_light2Intensity * u_light2Color;
                finalColor += light2 * phong2;
            }
        }

            // Cheap Antialiasing Calculate the anti - aliased factor using fwidth
            // float smoothFactor = fwidth(distance) * .5f;
            // float smoothStepFactor = smoothstep(.0f, smoothFactor, distance);
            // finalColor *= smoothStepFactor;

        finalColor = correctGamma(finalColor);

        if(u_applyAura) {
            finalColor += applyAura(normal, viewDirection);
        }

        color = vec4(finalColor, 1.);

        // }

        // fragColor = color;

        gl_FragColor = color;

    }

    `;var Vt=`precision highp float;

uniform float u_time;
uniform vec4 u_resolution;
uniform bool u_applyMouse;
uniform int u_mouseType;
uniform float u_mouseRadius;
uniform vec2 u_mouse;
uniform int u_shapeStyle;
uniform float u_speed;
uniform vec3 u_color;
uniform bool u_applyShading;
uniform bool u_applyLight1;
uniform bool u_applyLight2;
uniform bool u_applyRotation;
uniform bool u_applyAura;
uniform vec3 u_auraColor;
uniform float u_auraSpread;
uniform vec3 u_specularColor;
uniform float u_ambientIntensity;
uniform float u_light1Intensity;
uniform float u_light2Intensity;
uniform float u_shininess;
uniform vec2 u_lookAt;
uniform float u_cameraZoom;
uniform vec3 u_light1Position;
uniform vec3 u_light2Position;
uniform vec3 u_light1Color;
uniform vec3 u_light2Color;

const int MAX_MARCHING_STEPS = 150;
const float MAX_DIST = 8.0;
const float EPSILON = 0.001;

#define PI 3.14159265359

float rand(vec2 co) {
	return fract(sin(dot(co, vec2(12.9898, 78.233))) * 43758.5453);
}

mat4 rotation3d(vec3 axis, float angle) {
	axis = normalize(axis);
	float s = sin(angle);
	float c = cos(angle);
	float oc = 1.0 - c;

	return mat4(oc * axis.x * axis.x + c, oc * axis.x * axis.y - axis.z * s, oc * axis.z * axis.x + axis.y * s, 0.0, oc * axis.x * axis.y + axis.z * s, oc * axis.y * axis.y + c, oc * axis.y * axis.z - axis.x * s, 0.0, oc * axis.z * axis.x - axis.y * s, oc * axis.y * axis.z + axis.x * s, oc * axis.z * axis.z + c, 0.0, 0.0, 0.0, 0.0, 1.0);
}

vec3 rotate(vec3 v, vec3 axis, float angle) {
	return (rotation3d(axis, angle) * vec4(v, 1.0)).xyz;
}

vec3 correctGamma(vec3 color) {
	return pow(color, vec3(1.0 / 2.2));
}

float smin(float a, float b, float k) {
	float h = clamp(0.5 + 0.5 * (b - a) / k, 0.0, 1.0);
	return mix(b, a, h) - k * h * (1.0 - h);
}

float sdSphere(vec3 position, float radius) {
	return length(position) - radius;
}

float sdMetaBalls1(vec3 position, float radius, float speedFactor) {

	float time = u_time * 30. * speedFactor;
	float balls = sdSphere(position, radius);
	vec2 diff = vec2(0.0);
	float nball = 0.0;
	for(float i = 0.0; i < 5.; i++) {
		float random = rand(vec2(i, -i));
		diff = vec2(sin(i + random * 4. + time), cos(i - random * 20. - time)) * .8;
		nball = sdSphere(position + vec3(diff, 0.0), radius / 2.);
		balls = smin(balls, nball, 0.7);
	}
	return balls;
}

float sdMetaBalls2(vec3 position, float radius, float speedFactor) {
	float time = u_time * 30. * speedFactor;
	float balls = sdSphere(position, radius);
	vec2 diff = vec2(0.0);
	float nball = 0.0;
	for(float i = 0.0; i < 5.; i++) {
		diff = vec2(sin(i * 3. + time), cos(i + 1. * 1. - time)) * 1.;

		nball = sdSphere(position + vec3(diff, 0.0), radius / 2.);
		balls = smin(balls, nball, 0.7);
	}
	return balls;
}

float sdMetaBalls3(vec3 position, float radius, float speedFactor) {
	float time = u_time * 30. * speedFactor;
	float balls = sdSphere(position, radius);
	vec2 diff = vec2(0.0);
	float nball = 0.0;
	for(float i = 0.0; i < 5.; i++) {
		float random = rand(vec2(i, -i));
		diff = vec2(sin(i * 3. - time), cos(i + random * 1. - time)) * 1.;
		nball = sdSphere(position + vec3(diff, 0.0), radius / 2.);
		balls = smin(balls, nball, 0.7);
	}
	return balls;
}

float sdMetaBalls4(vec3 position, float radius, float speedFactor) {
	float time = u_time * 20. * speedFactor;
	float balls = sdSphere(position, radius);
	vec2 diff = vec2(0.0);
	float nball = 0.0;
	for(float i = 0.0; i < 5.; i++) {
		float random = rand(vec2(i, -i));
		diff = vec2(sin(i * 3. + time), sin(i + random * 1. + time)) * 1.2;

		nball = sdSphere(position + vec3(diff, 0.0), radius / 2.);
		balls = smin(balls, nball, 0.7);
	}
	return balls;
}

float sdMetaBalls5(vec3 position, float radius, float speedFactor) {
	float time = u_time * 20. * speedFactor;
	float balls = sdSphere(position, radius);
	vec2 diff = vec2(0.0);
	float nball = 0.0;
	for(float i = 0.0; i < 5.; i++) {
		float random = rand(vec2(i, -i));

		diff = vec2(sin(i + random * 3. + time), cos(i - random * 2. - time)) * 1.;

		nball = sdSphere(position + vec3(diff, 0.0), radius / 2.);
		balls = smin(balls, nball, 0.7);
	}
	return balls;
}

float sdMetaBalls6(vec3 position, float radius, float speedFactor, vec2 uv) {
	float time = u_time * 20. * speedFactor;
	float balls = sdSphere(position, radius);
	vec2 diff = vec2(0.0);
	float nball = 0.0;
	for(float i = 0.0; i < 5.; i++) {
		float random = rand(vec2(i, i));
		diff = vec2(cos(i + uv.x + time) * cos(uv.y - time), sin(i + uv.y + time) * sin(uv.x - time)) * 1.;

		nball = sdSphere(position + vec3(diff, 0.0), radius / 2.);
		balls = smin(balls, nball, 0.7);
	}
	return balls;
}

float sdMetaBalls7(vec3 position, float radius, float speedFactor, vec2 uv) {
	float time = u_time * 20. * speedFactor;
	float balls = sdSphere(position, radius);
	vec2 diff = vec2(0.0);
	float nball = 0.0;
	for(float i = 0.0; i < 5.; i++) {
		float random = rand(vec2(i, i));
		diff = vec2(cos(i + uv.x + time) * cos(uv.y - time), sin(i + uv.y + time) * sin(uv.x - time)) * 1.5;

		nball = sdSphere(position + vec3(diff, 0.0), radius / 2.);
		balls = smin(balls, nball, 0.7);
	}
	return balls;
}

float sdMetaBalls8(vec3 position, float radius, float speedFactor, vec2 uv) {
	float time = u_time * 20. * speedFactor;
	float balls = sdSphere(position, radius);
	vec2 diff = vec2(0.0);
	float nball = 0.0;
	for(float i = 0.0; i < 5.; i++) {
		float random = rand(vec2(i, i));
		diff = vec2(cos(i + uv.x * position.y + time) * cos(uv.y + time), sin(i + uv.y * position.x + time) * sin(uv.x + time)) * 1.5;

		nball = sdSphere(position + vec3(diff, 0.0), radius / 2.);
		balls = smin(balls, nball, 0.7);
	}
	return balls;
}

float sdMetaBalls9(vec3 position, float radius, float speedFactor, vec2 uv) {
	float time = u_time * 20. * speedFactor;

	float balls = sdSphere(position, radius);
	vec2 diff = vec2(0.0);
	float nball = 0.0;
	for(float i = 0.0; i < 5.; i++) {
		float random = rand(vec2(i, i));
		diff = vec2(cos(i + uv.x + position.y + time) * cos(uv.y + random - time), sin(i + uv.y + position.x + time) * sin(uv.x + random)) * 1.5;

		nball = sdSphere(position + vec3(diff, 0.0), radius / 2.);
		balls = smin(balls, nball, 0.7);
	}
	return balls;
}

float sdBlob(vec3 position, float radius) {
	float time = u_time * 60. * u_speed;
	float balls = sdSphere(position, radius);
	vec2 diff = vec2(0.0);
	float nball = 0.0;
	for(float i = 0.0; i < 3.; i++) {
		diff = vec2(sin(i * time), cos(i + time)) * 1.;
		nball = sdSphere(position + vec3(diff, 0.0) * .3, radius / 2.);
		balls = smin(balls, nball, 0.3);
	}

	return balls;
}

float sdScene(vec3 position, vec2 uv) {
	float scene = 0.;
	float sdMouse = 1.;

	if(u_applyMouse) {
		vec2 mouse = u_mouse * u_cameraZoom;
		mouse.x *= u_resolution.x / u_resolution.y;
		vec3 mousepos = position;
		mousepos.xy -= mouse + vec2(-1. * u_lookAt.x, u_lookAt.y);

		if(u_mouseType == 1) {
			sdMouse = sdSphere(mousepos, u_mouseRadius / 2.);
		} else if(u_mouseType == 2) {
			sdMouse = sdBlob(mousepos, u_mouseRadius / 2.);
		}
	}

	if(u_applyRotation) {
		vec3 rotatedPos = rotate(position, vec3(1., 1., 1.), u_time * 10.);
		position = rotatedPos;
	}

	float metaBalls = 0.;
	if(u_shapeStyle == 0) {
		metaBalls = sdMetaBalls1(position, .5, u_speed);
	} else if(u_shapeStyle == 1) {
		metaBalls = sdMetaBalls2(position, .5, u_speed);
	} else if(u_shapeStyle == 2) {
		metaBalls = sdMetaBalls3(position, .5, u_speed);
	} else if(u_shapeStyle == 3) {
		metaBalls = sdMetaBalls4(position, .5, u_speed);
	} else if(u_shapeStyle == 4) {
		metaBalls = sdMetaBalls5(position, .5, u_speed);
	} else if(u_shapeStyle == 5) {
		metaBalls = sdMetaBalls6(position, .5, u_speed, uv);
	} else if(u_shapeStyle == 6) {
		metaBalls = sdMetaBalls7(position, .5, u_speed, uv);
	} else if(u_shapeStyle == 7) {
		metaBalls = sdMetaBalls8(position, .5, u_speed, uv);
	} else if(u_shapeStyle == 8) {
		metaBalls = sdMetaBalls9(position, .5, u_speed, uv);
	}

	scene = smin(metaBalls, sdMouse, 0.7);

	return scene;

}

float raymarcher(vec3 rayOrigin, vec3 rayDirection, vec2 uv) {
	float depth = u_applyRotation ? u_cameraZoom - 2. : u_cameraZoom - .5;

	for(int i = 0; i < MAX_MARCHING_STEPS; i++) {
		float dist = sdScene(rayOrigin + depth * rayDirection, uv);
		if(dist < EPSILON) {
			return depth;
		}
		depth += dist;
		if(depth >= MAX_DIST) {
			return MAX_DIST;
		}

	}
	return MAX_DIST;
}

vec3 getNormal(vec3 p, vec2 uv) {
	float h = 0.0001;
	vec2 k = vec2(1, -1);
	return normalize(k.xyy * sdScene(p + k.xyy * h, uv) +
		k.yyx * sdScene(p + k.yyx * h, uv) +
		k.yxy * sdScene(p + k.yxy * h, uv) +
		k.xxx * sdScene(p + k.xxx * h, uv));
}

vec3 applyAura(vec3 normal, vec3 viewDirection) {
	float fresnel = 1. - dot(viewDirection, normal);
	fresnel = pow(fresnel, u_auraSpread);
	return u_auraColor * fresnel;
}

vec3 applyShading(vec3 normal, vec3 lightDirection, vec3 viewDirection, vec3 rayDirection) {
	vec3 ambient = u_ambientIntensity * u_color;
	vec3 diffuse = u_color * clamp(dot(normal, lightDirection), .0, 1.);
	vec3 halfVector = normalize(lightDirection + viewDirection);

	vec3 specular = u_specularColor * pow(clamp(dot(normal, halfVector), 0., 1.), u_shininess);
	return ambient + diffuse + specular;
}

void main() {

	vec2 uv = gl_FragCoord.xy / u_resolution.xy;
	uv -= 0.5;
	uv.x *= u_resolution.x / u_resolution.y;

	vec3 rayOrigin = vec3(-1. * u_lookAt.x, u_lookAt.y, u_cameraZoom);

	vec3 rayDirection = normalize(vec3(uv, -1.));

	float distance = raymarcher(rayOrigin, rayDirection, uv);


	vec4 color = vec4(0.0, 0.0, 0.0, 0.0);

	if(distance > MAX_DIST - EPSILON) {
		gl_FragColor = color;
		return;
	}

	vec3 position = rayOrigin + distance * rayDirection;
	vec3 normal = getNormal(position, uv);

	vec3 viewDirection = normalize(rayOrigin - position);
	vec3 finalColor = u_color;

	if(u_applyShading) {

		vec3 lightDirection1 = normalize(u_light1Position - position);
		vec3 phong = applyShading(normal, lightDirection1, viewDirection, rayDirection);

		if(u_applyLight1) {
			vec3 light = u_light1Intensity * u_light1Color;
			finalColor = light * phong;
		} else {
			finalColor = phong;
		}

		if(u_applyLight2) {
			vec3 lightDirection2 = normalize(u_light2Position - position);
			vec3 phong2 = applyShading(normal, lightDirection2, viewDirection, rayDirection);
			vec3 light2 = u_light2Intensity * u_light2Color;
			finalColor += light2 * phong2;
		}
	}

	finalColor = correctGamma(finalColor);

	if(u_applyAura) {
		finalColor += applyAura(normal, viewDirection);
	}

	color = vec4(finalColor, 1.);

	gl_FragColor = color;

}`,Wt=`attribute vec3 position;
attribute vec2 uv;

varying vec2 v_uv;
varying vec3 v_position;

void main() {

    v_uv = uv;
    v_position = position;
    gl_Position = vec4(position, 1.);
}`;const D=t=>window.ElementsHiveUtils.breakdance.getBreakdanceColor(t).slice(0,7),$t=window.ElementsHiveUtils.isTouchDevice,{lerp:ue}=window.ElementsHiveUtils.math,{matchMedia:Xt}=BreakdanceFrontend.utils,P=(t,e,i,s,n)=>s+(t-e)*(n-s)/(i-e);class Gt{constructor(e){this.options=e,this.container=e.container,this.canvas=e.canvas,this.eventContainer=e.eventContainer,this.viewport={width:this.container.clientWidth>window.innerWidth?window.innerWidth:this.container.clientWidth,height:this.container.clientHeight>window.innerHeight?window.innerHeight:this.container.clientHeight,dpr:Math.max(1,window.devicePixelRatio)},this.shouldRender=e.shouldRender,this.resolution=[1,1,1,1],this.enable_mouse=$t()?!1:this.options.interactions.enable_mouse,this.mouse=window.ElementsHiveUtils.mouse,this.currentMouse={x:0,y:0},this.targetMouse={x:0,y:0},this.isBuilder=this.options.isBuilder,this.baseBreakpointID=window.BreakdanceFrontend.data.BASE_BREAKPOINT_ID,this.activeBreakpoints=window.BreakdanceFrontend.data.breakpoints,this.sortedActiveBreakpoints=this.activeBreakpoints.filter(i=>i.id!==this.baseBreakpointID).sort((i,s)=>i.maxWidth-s.maxWidth),this.isMouseOnContainer=!1,this.init()}init(){this.setContainerBounds(),this.initCameraZoom(),this.createRenderer(),this.createScene(),this.createObjects(),this.setResolution(),this.initEvents(),this.raf()}setContainerBounds(){this.containerBounds=this.canvas.getBoundingClientRect()}createRenderer(){this.renderer=new Ne({canvas:this.canvas,width:this.viewport.width,height:this.viewport.height,alpha:!0,antialias:!0,depth:!1,dpr:this.viewport.dpr}),this.gl=this.renderer.gl}createScene(){this.scene=new oe}createObjects(){this.createGeometry(),this.createProgram(),this.createMesh()}createGeometry(){this.plane=new Nt(this.gl)}createProgram(){this.program=new Oe(this.gl,{uniforms:{u_time:{value:0},u_resolution:{value:this.resolution},u_mouse:{value:[this.targetMouse.x,this.targetMouse.y]},u_applyMouse:{value:this.enable_mouse},u_mouseType:{value:parseInt(this.options.interactions.mouse_type)},u_mouseRadius:{value:this.options.interactions.mouse_radius},u_applyShading:{value:this.options.apply_shading},u_shapeStyle:{value:parseInt(this.options.shape_style)},u_color:{value:new I(D(this.options.base_color))},u_speed:{value:this.options.speed},u_applyLight1:{value:this.options.apply_light1},u_light1Position:{value:this.options.light1_position},u_light1Color:{value:new I(D(this.options.light1_color))},u_light1Intensity:{value:this.options.light1_intensity},u_applyLight2:{value:this.options.apply_light2},u_light2Position:{value:this.options.light2_position},u_light2Color:{value:new I(D(this.options.light2_color))},u_light2Intensity:{value:this.options.light2_intensity},u_applyAura:{value:this.options.apply_aura},u_auraColor:{value:new I(D(this.options.aura_color))},u_auraSpread:{value:this.options.aura_spread},u_ambientColor:{value:new I(D(this.options.base_color))},u_ambientIntensity:{value:this.options.ambient_intensity},u_specularColor:{value:new I(D(this.options.specular_color))},u_specularIntensity:{value:this.options.specular_intensity},u_shininess:{value:this.options.shininess*10},u_applyRotation:{value:this.options.transforms.apply_rotation},u_lookAt:{value:[P(this.options.transforms.look_at.x,0,100,-5,5),P(this.options.transforms.look_at.y,0,100,-5,5)]},u_cameraZoom:{value:this.options.camera_zoom}},vertex:Wt,fragment:this.isBuilder?Vt:Ut(this.options.shape_style),transparent:!0})}createMesh(){this.mesh=new Lt(this.gl,{geometry:this.plane,program:this.program})}refreshUniforms(){this.enable_mouse=this.options.interactions.enable_mouse,this.program.uniforms.u_applyShading.value=this.options.apply_shading,this.program.uniforms.u_shapeStyle.value=parseInt(this.options.shape_style),this.program.uniforms.u_speed.value=this.options.speed,this.program.uniforms.u_color.value=new I(D(this.options.base_color)),this.program.uniforms.u_applyMouse.value=this.options.interactions.enable_mouse,this.program.uniforms.u_mouseType.value=parseInt(this.options.interactions.mouse_type),this.program.uniforms.u_mouseRadius.value=this.options.interactions.mouse_radius,this.program.uniforms.u_applyLight1.value=this.options.apply_light1,this.program.uniforms.u_light1Color.value=new I(D(this.options.light1_color)),this.program.uniforms.u_light1Position.value=this.options.light1_position,this.program.uniforms.u_light1Intensity.value=this.options.light1_intensity,this.program.uniforms.u_applyLight2.value=this.options.apply_light2,this.program.uniforms.u_light2Color.value=new I(D(this.options.light2_color)),this.program.uniforms.u_light2Position.value=this.options.light2_position,this.program.uniforms.u_light2Intensity.value=this.options.light2_intensity,this.program.uniforms.u_ambientColor.value=new I(D(this.options.ambient_color)),this.program.uniforms.u_ambientIntensity.value=this.options.ambient_intensity,this.program.uniforms.u_specularColor.value=new I(D(this.options.specular_color)),this.program.uniforms.u_specularIntensity.value=this.options.specular_intensity,this.program.uniforms.u_shininess.value=this.options.shininess*10,this.program.uniforms.u_applyAura.value=this.options.apply_aura,this.program.uniforms.u_auraColor.value=new I(D(this.options.aura_color)),this.program.uniforms.u_auraSpread.value=this.options.aura_spread,this.program.uniforms.u_applyRotation.value=this.options.transforms.apply_rotation,this.program.uniforms.u_lookAt.value=[P(this.options.transforms.look_at.x,0,100,-5,5),P(this.options.transforms.look_at.y,0,100,-5,5)]}refresh(){this.refreshUniforms(),this.initMouseEvents(),this.initCameraZoom(),this.setCameraZoomUniform()}updateUniforms(){this.program.uniforms.u_time.value+=5e-4,this.enable_mouse&&(this.program.uniforms.u_mouse.value=[this.targetMouse.x,this.targetMouse.y])}raf(){window.requestAnimationFrame(this.raf.bind(this)),this.shouldRender&&(this.isMouseOnContainer&&this.updateTargetMouse(),this.updateUniforms(),this.renderer.render({scene:this.mesh}))}setResolution(){this.viewport.height/this.viewport.width>1?(this.resolution[2]=this.viewport.width/this.viewport.height*1,this.resolution[3]=1):(this.resolution[2]=1,this.resolution[3]=this.viewport.height/this.viewport.width/1),this.resolution[0]=this.viewport.width*this.viewport.dpr,this.resolution[1]=this.viewport.height*this.viewport.dpr,this.program.uniforms.u_resolution.value=this.resolution}onResize(){this.setContainerBounds(),this.viewport.width=this.container.clientWidth>window.innerWidth?window.innerWidth:this.container.clientWidth,this.viewport.height=this.container.clientHeight>window.innerHeight?window.innerHeight:this.container.clientHeight,this.renderer.setSize(this.viewport.width,this.viewport.height),this.setResolution(),this.initCameraZoom(),this.setCameraZoomUniform()}onGlobalMouseMove(){this.targetMouse.x=this.mouse.targetPosition.x/this.viewport.width-.5,this.targetMouse.y=-this.mouse.targetPosition.y/this.viewport.height+.5}onContainerMouseMove(e){this.currentMouse.x=(e.clientX-this.containerBounds.left)/this.viewport.width-.5,this.currentMouse.y=-1*(e.clientY-this.containerBounds.top)/this.viewport.height+.5}updateTargetMouse(){this.targetMouse.x=ue(this.targetMouse.x,this.currentMouse.x,.08),this.targetMouse.y=ue(this.targetMouse.y,this.currentMouse.y,.08)}onScroll(){this.shouldRender&&this.setContainerBounds()}initMouseEvents(){this.enable_mouse&&(this.options.apply_to_page?this.mouse.on("raf",this.onGlobalMouseMove.bind(this)):(this.isMouseOnContainer=!0,document.addEventListener("scroll",this.onScroll.bind(this)),this.eventContainer.addEventListener("mousemove",this.onContainerMouseMove.bind(this))))}initEvents(){window.addEventListener("resize",this.onResize.bind(this)),this.initMouseEvents()}getCurrentBreakpoint(e){const{BASE_BREAKPOINT_ID:i,breakpoints:s}=window.BreakdanceFrontend.data;return s.filter(r=>e?e.includes(r):!0).sort((r,a)=>r.maxWidth-a.maxWidth).find(r=>Xt(r))||s.find(r=>r.id===i)}initCameraZoom(){if(typeof this.options.transforms.camera_zoom=="number"){this.options.camera_zoom=this.options.transforms.camera_zoom;return}const e=this.getCurrentBreakpoint(this.activeBreakpoints);if(this.options.transforms.camera_zoom[e.id]){this.options.camera_zoom=this.options.transforms.camera_zoom[e.id];return}const i=this.sortedActiveBreakpoints.slice(this.sortedActiveBreakpoints.indexOf(e),this.sortedActiveBreakpoints.length).map(s=>this.options.transforms.camera_zoom[s.id]).find(s=>s!==void 0);this.options.camera_zoom=i||this.options.transforms.camera_zoom[this.baseBreakpointID]||2}setCameraZoomUniform(){this.program.uniforms.u_cameraZoom.value=this.options.camera_zoom}}const de=window.ElementsHiveUtils.isElementInViewport,{isPrefersReducedMotion:qt}=window.ElementsHiveUtils.browser,X=t=>window.ElementsHiveUtils.breakdance.getBreakdanceColor(t).slice(0,7),{mergeObjects:pe}=window.BreakdanceFrontend.utils,me={shape_style:0,speed:1,shading_mode:"shaded2",base_color:"#000000",light1_position:[4,4,2],light1_color:"#ffffff",light1_intensity:.3,light2_position:[-4,-4,2],light2_color:"#ffffff",light2_intensity:.3,aura_color:"#ffffff",aura_spread:1,ambient_color:"#ffffff",ambient_intensity:1,specular_color:"#ffffff",specular_intensity:1,shininess:1,transforms:{apply_rotation:!1,look_at:{x:50,y:50},camera_zoom:2},interactions:{enable_mouse:!1,mouse_type:1,mouse_radius:.2}};class Zt{constructor(e){this.options=pe(me,e),this.containerEl=e.containerEl,this.sectionContainer=e.sectionContainer,this.applyToPage=e.apply_to_page,this.isBuilderMode=e.isBuilderMode||!1,this.init()}init(){this.setShadingModeOptions(),this.setSpeedFactor(),this.createMarkup(),this.createInstance(),this.applyToPage||this.initIntersetionObserver(),this.isBuilderMode&&this.initResizeObserver()}setShadingModeOptions(){switch(this.options.shading_mode){case"shaded":default:this.options.apply_shading=!0,this.options.apply_light1=!0,this.options.light1_color=X(this.options.base_color)==="#000000"?"#ffffff":this.options.base_color,this.options.apply_aura=!1,this.options.light2_color="#ffffff",this.options.apply_light2=!1;break;case"shaded2":this.options.apply_shading=!0,this.options.apply_light1=!0,this.options.light1_color=X(this.options.base_color)==="#000000"?"#ffffff":this.options.base_color,this.options.apply_aura=!1,this.options.light2_color=X(this.options.base_color)==="#000000"?"#ffffff":this.options.base_color,this.options.apply_light2=!0;break;case"aura":this.options.apply_shading=!0,this.options.apply_light1=!0,this.options.light1_color="#ffffff",this.options.light1_intensity=1,this.options.specular_color="#000000",this.options.apply_aura=!0,this.options.apply_light2=!1;break;case"scifi":this.options.apply_light1=!0,this.options.light1_color=this.options.base_color,this.options.light1_intensity=this.options.light2_intensity=this.options.ambient_intensity,this.options.base_color="#000000",this.options.apply_light2=!0,this.options.apply_shading=!0,this.options.apply_aura=!1;break}}setSpeedFactor(){this.options.speed=qt?this.options.speed/2:this.options.speed}refresh(e){this.options=pe(me,e),e.apply_to_page!=this.applyToPage?(this.destroy(),this.init()):(this.setShadingModeOptions(),this.setSpeedFactor(),this.experience.options=this.options,this.experience.refresh())}createMarkup(){var e;this.applyToPage=this.options.apply_to_page,(e=document.querySelector(`eh-webgl-metaballs-${this.options.id}`))==null||e.remove(),this.domWrapper=document.createElement("div"),this.domWrapper.classList.add("eh-webgl-metaballs",`eh-webgl-metaballs-${this.options.id}`),this.applyToPage?document.body.append(this.domWrapper):this.containerEl.insertAdjacentElement("afterbegin",this.domWrapper),this.canvas=document.createElement("canvas"),this.canvas.classList.add("eh-webgl-metaballs__canvas"),this.domWrapper.append(this.canvas)}createInstance(){this.experience=new Gt({container:this.domWrapper,eventContainer:this.containerEl,canvas:this.canvas,shouldRender:this.applyToPage?!0:de(this.domWrapper),...this.options})}onIntersection(e,i){this.experience.shouldRender=de(this.domWrapper)}initIntersetionObserver(){let e={root:null,rootMargin:"0px",threshold:1e-5};this.intersectionObserver=new IntersectionObserver(this.onIntersection.bind(this),e),this.intersectionObserver.observe(this.sectionContainer)}onResize(){this.experience&&this.experience.onResize()}destroy(){var e,i,s;(e=this.intersectionObserver)==null||e.unobserve(this.sectionContainer),(i=this.resizeObserver)==null||i.disconnect(),(s=this.domWrapper)==null||s.remove(),this.experience=null}initResizeObserver(){this.resizeObserver=new ResizeObserver(e=>{setTimeout(()=>{this.onResize()},500)}),this.resizeObserver.observe(this.containerEl.parentElement)}}return Zt});
